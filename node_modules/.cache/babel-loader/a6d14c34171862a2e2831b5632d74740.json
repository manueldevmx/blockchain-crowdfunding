{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.best_r = best_r;\n\nvar _bignumber = require(\"bignumber.js\");\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // eslint-disable-next-line no-bitwise\n\n\nvar MAX_INT = (1 << 31 >>> 0) - 1;\n/**\n * Calculates and returns the best rational approximation of the given real number.\n * @private\n * @param {string|number|BigNumber} rawNumber Real number\n * @throws Error Throws `Error` when the best rational approximation cannot be found.\n * @returns {array} first element is n (numerator), second element is d (denominator)\n */\n\nfunction best_r(rawNumber) {\n  var number = new _bignumber2.default(rawNumber);\n  var a = void 0;\n  var f = void 0;\n  var fractions = [[new _bignumber2.default(0), new _bignumber2.default(1)], [new _bignumber2.default(1), new _bignumber2.default(0)]];\n  var i = 2; // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    if (number.gt(MAX_INT)) {\n      break;\n    }\n\n    a = number.floor();\n    f = number.sub(a);\n    var h = a.mul(fractions[i - 1][0]).add(fractions[i - 2][0]);\n    var k = a.mul(fractions[i - 1][1]).add(fractions[i - 2][1]);\n\n    if (h.gt(MAX_INT) || k.gt(MAX_INT)) {\n      break;\n    }\n\n    fractions.push([h, k]);\n\n    if (f.eq(0)) {\n      break;\n    }\n\n    number = new _bignumber2.default(1).div(f);\n    i += 1;\n  }\n\n  var _fractions = _slicedToArray(fractions[fractions.length - 1], 2),\n      n = _fractions[0],\n      d = _fractions[1];\n\n  if (n.isZero() || d.isZero()) {\n    throw new Error(\"Couldn't find approximation\");\n  }\n\n  return [n.toNumber(), d.toNumber()];\n}","map":{"version":3,"sources":["/home/manuel/Escritorio/blockchain_code/blockchain-crowdfunding/test_crowdfundig/node_modules/stellar-base/lib/util/continued_fraction.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","best_r","_bignumber","require","_bignumber2","_interopRequireDefault","obj","__esModule","default","MAX_INT","rawNumber","number","a","f","fractions","gt","floor","sub","h","mul","add","k","eq","div","_fractions","n","d","isZero","Error","toNumber"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.best_r = best_r;\n\nvar _bignumber = require(\"bignumber.js\");\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-next-line no-bitwise\nvar MAX_INT = (1 << 31 >>> 0) - 1;\n\n/**\n * Calculates and returns the best rational approximation of the given real number.\n * @private\n * @param {string|number|BigNumber} rawNumber Real number\n * @throws Error Throws `Error` when the best rational approximation cannot be found.\n * @returns {array} first element is n (numerator), second element is d (denominator)\n */\nfunction best_r(rawNumber) {\n  var number = new _bignumber2.default(rawNumber);\n  var a = void 0;\n  var f = void 0;\n  var fractions = [[new _bignumber2.default(0), new _bignumber2.default(1)], [new _bignumber2.default(1), new _bignumber2.default(0)]];\n  var i = 2;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (number.gt(MAX_INT)) {\n      break;\n    }\n    a = number.floor();\n    f = number.sub(a);\n    var h = a.mul(fractions[i - 1][0]).add(fractions[i - 2][0]);\n    var k = a.mul(fractions[i - 1][1]).add(fractions[i - 2][1]);\n    if (h.gt(MAX_INT) || k.gt(MAX_INT)) {\n      break;\n    }\n    fractions.push([h, k]);\n    if (f.eq(0)) {\n      break;\n    }\n    number = new _bignumber2.default(1).div(f);\n    i += 1;\n  }\n\n  var _fractions = _slicedToArray(fractions[fractions.length - 1], 2),\n      n = _fractions[0],\n      d = _fractions[1];\n\n  if (n.isZero() || d.isZero()) {\n    throw new Error(\"Couldn't find approximation\");\n  }\n\n  return [n.toNumber(), d.toNumber()];\n}"]},"metadata":{},"sourceType":"script"}