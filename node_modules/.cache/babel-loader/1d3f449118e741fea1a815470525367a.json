{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StrKey = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n/* eslint-disable no-bitwise */\n\n\nexports.decodeCheck = decodeCheck;\nexports.encodeCheck = encodeCheck;\n\nvar _base = require('base32.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _crc = require('crc');\n\nvar _crc2 = _interopRequireDefault(_crc);\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _isNull = require('lodash/isNull');\n\nvar _isNull2 = _interopRequireDefault(_isNull);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _checksum = require('./util/checksum');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar versionBytes = {\n  ed25519PublicKey: 6 << 3,\n  // G\n  ed25519SecretSeed: 18 << 3,\n  // S\n  preAuthTx: 19 << 3,\n  // T\n  sha256Hash: 23 << 3 // X\n\n};\n/**\n * StrKey is a helper class that allows encoding and decoding strkey.\n */\n\nvar StrKey = exports.StrKey = function () {\n  function StrKey() {\n    _classCallCheck(this, StrKey);\n  }\n\n  _createClass(StrKey, null, [{\n    key: 'encodeEd25519PublicKey',\n\n    /**\n     * Encodes data to strkey ed25519 public key.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n    value: function encodeEd25519PublicKey(data) {\n      return encodeCheck('ed25519PublicKey', data);\n    }\n    /**\n     * Decodes strkey ed25519 public key to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodeEd25519PublicKey',\n    value: function decodeEd25519PublicKey(data) {\n      return decodeCheck('ed25519PublicKey', data);\n    }\n    /**\n     * Returns true if the given Stellar public key is a valid ed25519 public key.\n     * @param {string} publicKey public key to check\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isValidEd25519PublicKey',\n    value: function isValidEd25519PublicKey(publicKey) {\n      return isValid('ed25519PublicKey', publicKey);\n    }\n    /**\n     * Encodes data to strkey ed25519 seed.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n\n  }, {\n    key: 'encodeEd25519SecretSeed',\n    value: function encodeEd25519SecretSeed(data) {\n      return encodeCheck('ed25519SecretSeed', data);\n    }\n    /**\n     * Decodes strkey ed25519 seed to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodeEd25519SecretSeed',\n    value: function decodeEd25519SecretSeed(data) {\n      return decodeCheck('ed25519SecretSeed', data);\n    }\n    /**\n     * Returns true if the given Stellar secret key is a valid ed25519 secret seed.\n     * @param {string} seed seed to check\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isValidEd25519SecretSeed',\n    value: function isValidEd25519SecretSeed(seed) {\n      return isValid('ed25519SecretSeed', seed);\n    }\n    /**\n     * Encodes data to strkey preAuthTx.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n\n  }, {\n    key: 'encodePreAuthTx',\n    value: function encodePreAuthTx(data) {\n      return encodeCheck('preAuthTx', data);\n    }\n    /**\n     * Decodes strkey PreAuthTx to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodePreAuthTx',\n    value: function decodePreAuthTx(data) {\n      return decodeCheck('preAuthTx', data);\n    }\n    /**\n     * Encodes data to strkey sha256 hash.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n\n  }, {\n    key: 'encodeSha256Hash',\n    value: function encodeSha256Hash(data) {\n      return encodeCheck('sha256Hash', data);\n    }\n    /**\n     * Decodes strkey sha256 hash to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodeSha256Hash',\n    value: function decodeSha256Hash(data) {\n      return decodeCheck('sha256Hash', data);\n    }\n  }]);\n\n  return StrKey;\n}();\n\nfunction isValid(versionByteName, encoded) {\n  if (encoded && encoded.length !== 56) {\n    return false;\n  }\n\n  try {\n    var decoded = decodeCheck(versionByteName, encoded);\n\n    if (decoded.length !== 32) {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction decodeCheck(versionByteName, encoded) {\n  if (!(0, _isString2.default)(encoded)) {\n    throw new TypeError('encoded argument must be of type String');\n  }\n\n  var decoded = _base2.default.decode(encoded);\n\n  var versionByte = decoded[0];\n  var payload = decoded.slice(0, -2);\n  var data = payload.slice(1);\n  var checksum = decoded.slice(-2);\n\n  if (encoded !== _base2.default.encode(decoded)) {\n    throw new Error('invalid encoded string');\n  }\n\n  var expectedVersion = versionBytes[versionByteName];\n\n  if ((0, _isUndefined2.default)(expectedVersion)) {\n    throw new Error(versionByteName + ' is not a valid version byte name. Expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\", \"muxedAccount\"');\n  }\n\n  if (versionByte !== expectedVersion) {\n    throw new Error('invalid version byte. expected ' + expectedVersion + ', got ' + versionByte);\n  }\n\n  var expectedChecksum = calculateChecksum(payload);\n\n  if (!(0, _checksum.verifyChecksum)(expectedChecksum, checksum)) {\n    throw new Error('invalid checksum');\n  }\n\n  return Buffer.from(data);\n}\n\nfunction encodeCheck(versionByteName, data) {\n  if ((0, _isNull2.default)(data) || (0, _isUndefined2.default)(data)) {\n    throw new Error('cannot encode null data');\n  }\n\n  var versionByte = versionBytes[versionByteName];\n\n  if ((0, _isUndefined2.default)(versionByte)) {\n    throw new Error(versionByteName + ' is not a valid version byte name. Expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\", \"muxedAccount\"');\n  }\n\n  data = Buffer.from(data);\n  var versionBuffer = Buffer.from([versionByte]);\n  var payload = Buffer.concat([versionBuffer, data]);\n  var checksum = calculateChecksum(payload);\n  var unencoded = Buffer.concat([payload, checksum]);\n  return _base2.default.encode(unencoded);\n}\n\nfunction calculateChecksum(payload) {\n  // This code calculates CRC16-XModem checksum of payload\n  // and returns it as Buffer in little-endian order.\n  var checksum = Buffer.alloc(2);\n  checksum.writeUInt16LE(_crc2.default.crc16xmodem(payload), 0);\n  return checksum;\n}","map":{"version":3,"sources":["/home/manuel/Escritorio/blockchain_code/blockchain-crowdfunding/test_crowdfundig/node_modules/stellar-base/lib/strkey.js"],"names":["Object","defineProperty","exports","value","StrKey","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","decodeCheck","encodeCheck","_base","require","_base2","_interopRequireDefault","_crc","_crc2","_isUndefined","_isUndefined2","_isNull","_isNull2","_isString","_isString2","_checksum","obj","__esModule","default","_classCallCheck","instance","TypeError","versionBytes","ed25519PublicKey","ed25519SecretSeed","preAuthTx","sha256Hash","encodeEd25519PublicKey","data","decodeEd25519PublicKey","isValidEd25519PublicKey","publicKey","isValid","encodeEd25519SecretSeed","decodeEd25519SecretSeed","isValidEd25519SecretSeed","seed","encodePreAuthTx","decodePreAuthTx","encodeSha256Hash","decodeSha256Hash","versionByteName","encoded","decoded","err","decode","versionByte","payload","slice","checksum","encode","Error","expectedVersion","expectedChecksum","calculateChecksum","verifyChecksum","Buffer","from","versionBuffer","concat","unencoded","alloc","writeUInt16LE","crc16xmodem"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StrKey = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable no-bitwise */\n\nexports.decodeCheck = decodeCheck;\nexports.encodeCheck = encodeCheck;\n\nvar _base = require('base32.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _crc = require('crc');\n\nvar _crc2 = _interopRequireDefault(_crc);\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _isNull = require('lodash/isNull');\n\nvar _isNull2 = _interopRequireDefault(_isNull);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _checksum = require('./util/checksum');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar versionBytes = {\n  ed25519PublicKey: 6 << 3, // G\n  ed25519SecretSeed: 18 << 3, // S\n  preAuthTx: 19 << 3, // T\n  sha256Hash: 23 << 3 // X\n};\n\n/**\n * StrKey is a helper class that allows encoding and decoding strkey.\n */\n\nvar StrKey = exports.StrKey = function () {\n  function StrKey() {\n    _classCallCheck(this, StrKey);\n  }\n\n  _createClass(StrKey, null, [{\n    key: 'encodeEd25519PublicKey',\n\n    /**\n     * Encodes data to strkey ed25519 public key.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n    value: function encodeEd25519PublicKey(data) {\n      return encodeCheck('ed25519PublicKey', data);\n    }\n\n    /**\n     * Decodes strkey ed25519 public key to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodeEd25519PublicKey',\n    value: function decodeEd25519PublicKey(data) {\n      return decodeCheck('ed25519PublicKey', data);\n    }\n\n    /**\n     * Returns true if the given Stellar public key is a valid ed25519 public key.\n     * @param {string} publicKey public key to check\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isValidEd25519PublicKey',\n    value: function isValidEd25519PublicKey(publicKey) {\n      return isValid('ed25519PublicKey', publicKey);\n    }\n\n    /**\n     * Encodes data to strkey ed25519 seed.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n\n  }, {\n    key: 'encodeEd25519SecretSeed',\n    value: function encodeEd25519SecretSeed(data) {\n      return encodeCheck('ed25519SecretSeed', data);\n    }\n\n    /**\n     * Decodes strkey ed25519 seed to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodeEd25519SecretSeed',\n    value: function decodeEd25519SecretSeed(data) {\n      return decodeCheck('ed25519SecretSeed', data);\n    }\n\n    /**\n     * Returns true if the given Stellar secret key is a valid ed25519 secret seed.\n     * @param {string} seed seed to check\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isValidEd25519SecretSeed',\n    value: function isValidEd25519SecretSeed(seed) {\n      return isValid('ed25519SecretSeed', seed);\n    }\n\n    /**\n     * Encodes data to strkey preAuthTx.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n\n  }, {\n    key: 'encodePreAuthTx',\n    value: function encodePreAuthTx(data) {\n      return encodeCheck('preAuthTx', data);\n    }\n\n    /**\n     * Decodes strkey PreAuthTx to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodePreAuthTx',\n    value: function decodePreAuthTx(data) {\n      return decodeCheck('preAuthTx', data);\n    }\n\n    /**\n     * Encodes data to strkey sha256 hash.\n     * @param {Buffer} data data to encode\n     * @returns {string}\n     */\n\n  }, {\n    key: 'encodeSha256Hash',\n    value: function encodeSha256Hash(data) {\n      return encodeCheck('sha256Hash', data);\n    }\n\n    /**\n     * Decodes strkey sha256 hash to raw data.\n     * @param {string} data data to decode\n     * @returns {Buffer}\n     */\n\n  }, {\n    key: 'decodeSha256Hash',\n    value: function decodeSha256Hash(data) {\n      return decodeCheck('sha256Hash', data);\n    }\n  }]);\n\n  return StrKey;\n}();\n\nfunction isValid(versionByteName, encoded) {\n  if (encoded && encoded.length !== 56) {\n    return false;\n  }\n\n  try {\n    var decoded = decodeCheck(versionByteName, encoded);\n    if (decoded.length !== 32) {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n  return true;\n}\n\nfunction decodeCheck(versionByteName, encoded) {\n  if (!(0, _isString2.default)(encoded)) {\n    throw new TypeError('encoded argument must be of type String');\n  }\n\n  var decoded = _base2.default.decode(encoded);\n  var versionByte = decoded[0];\n  var payload = decoded.slice(0, -2);\n  var data = payload.slice(1);\n  var checksum = decoded.slice(-2);\n\n  if (encoded !== _base2.default.encode(decoded)) {\n    throw new Error('invalid encoded string');\n  }\n\n  var expectedVersion = versionBytes[versionByteName];\n\n  if ((0, _isUndefined2.default)(expectedVersion)) {\n    throw new Error(versionByteName + ' is not a valid version byte name. Expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\", \"muxedAccount\"');\n  }\n\n  if (versionByte !== expectedVersion) {\n    throw new Error('invalid version byte. expected ' + expectedVersion + ', got ' + versionByte);\n  }\n\n  var expectedChecksum = calculateChecksum(payload);\n\n  if (!(0, _checksum.verifyChecksum)(expectedChecksum, checksum)) {\n    throw new Error('invalid checksum');\n  }\n\n  return Buffer.from(data);\n}\n\nfunction encodeCheck(versionByteName, data) {\n  if ((0, _isNull2.default)(data) || (0, _isUndefined2.default)(data)) {\n    throw new Error('cannot encode null data');\n  }\n\n  var versionByte = versionBytes[versionByteName];\n\n  if ((0, _isUndefined2.default)(versionByte)) {\n    throw new Error(versionByteName + ' is not a valid version byte name. Expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\", \"muxedAccount\"');\n  }\n  data = Buffer.from(data);\n\n  var versionBuffer = Buffer.from([versionByte]);\n  var payload = Buffer.concat([versionBuffer, data]);\n  var checksum = calculateChecksum(payload);\n  var unencoded = Buffer.concat([payload, checksum]);\n\n  return _base2.default.encode(unencoded);\n}\n\nfunction calculateChecksum(payload) {\n  // This code calculates CRC16-XModem checksum of payload\n  // and returns it as Buffer in little-endian order.\n  var checksum = Buffer.alloc(2);\n  checksum.writeUInt16LE(_crc2.default.crc16xmodem(payload), 0);\n  return checksum;\n}"]},"metadata":{},"sourceType":"script"}