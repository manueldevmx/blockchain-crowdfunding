{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pathPaymentStrictSend = pathPaymentStrictSend;\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _decode_encode_muxed_account = require('../util/decode_encode_muxed_account');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns a XDR PathPaymentStrictSendOp. A `PathPaymentStrictSend` operation send the specified amount to the\n * destination account crediting at least `destMin` of `destAsset`, optionally through a path. XLM payments create the destination\n * account if it does not exist.\n * @function\n * @alias Operation.pathPaymentStrictSend\n * @param {object} opts Options object\n * @param {Asset} opts.sendAsset - The asset to pay with.\n * @param {string} opts.sendAmount - Amount of sendAsset to send (excluding fees).\n * @param {string} opts.destination - The destination account to send to.\n * @param {Asset} opts.destAsset - The asset the destination will receive.\n * @param {string} opts.destMin - The minimum amount of destAsset to be received\n * @param {Asset[]} opts.path - An array of Asset objects to use as the path.\n * @param {string} [opts.source] - The source account for the payment. Defaults to the transaction's source account.\n * @returns {xdr.PathPaymentStrictSendOp} Path Payment Strict Receive operation\n */\n\n\nfunction pathPaymentStrictSend(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n\n    case !this.isValidAmount(opts.sendAmount):\n      throw new TypeError(this.constructAmountRequirementsError('sendAmount'));\n\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n\n    case !this.isValidAmount(opts.destMin):\n      throw new TypeError(this.constructAmountRequirementsError('destMin'));\n\n    default:\n      break;\n  }\n\n  var attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendAmount = this._toXDRAmount(opts.sendAmount);\n\n  try {\n    attributes.destination = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destMin = this._toXDRAmount(opts.destMin);\n  var path = opts.path ? opts.path : [];\n  attributes.path = path.map(function (x) {\n    return x.toXDRObject();\n  });\n  var payment = new _stellarXdr_generated2.default.PathPaymentStrictSendOp(attributes);\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.pathPaymentStrictSend(payment);\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"sources":["/home/manuel/Escritorio/blockchain_code/blockchain-crowdfunding/test_crowdfundig/node_modules/stellar-base/lib/operations/path_payment_strict_send.js"],"names":["Object","defineProperty","exports","value","pathPaymentStrictSend","_stellarXdr_generated","require","_stellarXdr_generated2","_interopRequireDefault","_decode_encode_muxed_account","obj","__esModule","default","opts","sendAsset","Error","isValidAmount","sendAmount","TypeError","constructAmountRequirementsError","destAsset","destMin","attributes","toXDRObject","_toXDRAmount","destination","decodeAddressToMuxedAccount","e","path","map","x","payment","PathPaymentStrictSendOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAC,oCAAD,CAAnC;;AAEA,IAAIC,sBAAsB,GAAGC,sBAAsB,CAACH,qBAAD,CAAnD;;AAEA,IAAII,4BAA4B,GAAGH,OAAO,CAAC,qCAAD,CAA1C;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,qBAAT,CAA+BS,IAA/B,EAAqC;AACnC,UAAQ,IAAR;AACE,SAAK,CAACA,IAAI,CAACC,SAAX;AACE,YAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;;AACF,SAAK,CAAC,KAAKC,aAAL,CAAmBH,IAAI,CAACI,UAAxB,CAAN;AACE,YAAM,IAAIC,SAAJ,CAAc,KAAKC,gCAAL,CAAsC,YAAtC,CAAd,CAAN;;AACF,SAAK,CAACN,IAAI,CAACO,SAAX;AACE,YAAM,IAAIL,KAAJ,CAAU,kDAAV,CAAN;;AACF,SAAK,CAAC,KAAKC,aAAL,CAAmBH,IAAI,CAACQ,OAAxB,CAAN;AACE,YAAM,IAAIH,SAAJ,CAAc,KAAKC,gCAAL,CAAsC,SAAtC,CAAd,CAAN;;AACF;AACE;AAVJ;;AAaA,MAAIG,UAAU,GAAG,EAAjB;AACAA,EAAAA,UAAU,CAACR,SAAX,GAAuBD,IAAI,CAACC,SAAL,CAAeS,WAAf,EAAvB;AACAD,EAAAA,UAAU,CAACL,UAAX,GAAwB,KAAKO,YAAL,CAAkBX,IAAI,CAACI,UAAvB,CAAxB;;AACA,MAAI;AACFK,IAAAA,UAAU,CAACG,WAAX,GAAyB,CAAC,GAAGhB,4BAA4B,CAACiB,2BAAjC,EAA8Db,IAAI,CAACY,WAAnE,CAAzB;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACV,UAAM,IAAIZ,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACDO,EAAAA,UAAU,CAACF,SAAX,GAAuBP,IAAI,CAACO,SAAL,CAAeG,WAAf,EAAvB;AACAD,EAAAA,UAAU,CAACD,OAAX,GAAqB,KAAKG,YAAL,CAAkBX,IAAI,CAACQ,OAAvB,CAArB;AAEA,MAAIO,IAAI,GAAGf,IAAI,CAACe,IAAL,GAAYf,IAAI,CAACe,IAAjB,GAAwB,EAAnC;AACAN,EAAAA,UAAU,CAACM,IAAX,GAAkBA,IAAI,CAACC,GAAL,CAAS,UAAUC,CAAV,EAAa;AACtC,WAAOA,CAAC,CAACP,WAAF,EAAP;AACD,GAFiB,CAAlB;AAIA,MAAIQ,OAAO,GAAG,IAAIxB,sBAAsB,CAACK,OAAvB,CAA+BoB,uBAAnC,CAA2DV,UAA3D,CAAd;AAEA,MAAIW,YAAY,GAAG,EAAnB;AACAA,EAAAA,YAAY,CAACC,IAAb,GAAoB3B,sBAAsB,CAACK,OAAvB,CAA+BuB,aAA/B,CAA6C/B,qBAA7C,CAAmE2B,OAAnE,CAApB;AACA,OAAKK,gBAAL,CAAsBH,YAAtB,EAAoCpB,IAApC;AAEA,SAAO,IAAIN,sBAAsB,CAACK,OAAvB,CAA+ByB,SAAnC,CAA6CJ,YAA7C,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pathPaymentStrictSend = pathPaymentStrictSend;\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _decode_encode_muxed_account = require('../util/decode_encode_muxed_account');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a XDR PathPaymentStrictSendOp. A `PathPaymentStrictSend` operation send the specified amount to the\n * destination account crediting at least `destMin` of `destAsset`, optionally through a path. XLM payments create the destination\n * account if it does not exist.\n * @function\n * @alias Operation.pathPaymentStrictSend\n * @param {object} opts Options object\n * @param {Asset} opts.sendAsset - The asset to pay with.\n * @param {string} opts.sendAmount - Amount of sendAsset to send (excluding fees).\n * @param {string} opts.destination - The destination account to send to.\n * @param {Asset} opts.destAsset - The asset the destination will receive.\n * @param {string} opts.destMin - The minimum amount of destAsset to be received\n * @param {Asset[]} opts.path - An array of Asset objects to use as the path.\n * @param {string} [opts.source] - The source account for the payment. Defaults to the transaction's source account.\n * @returns {xdr.PathPaymentStrictSendOp} Path Payment Strict Receive operation\n */\nfunction pathPaymentStrictSend(opts) {\n  switch (true) {\n    case !opts.sendAsset:\n      throw new Error('Must specify a send asset');\n    case !this.isValidAmount(opts.sendAmount):\n      throw new TypeError(this.constructAmountRequirementsError('sendAmount'));\n    case !opts.destAsset:\n      throw new Error('Must provide a destAsset for a payment operation');\n    case !this.isValidAmount(opts.destMin):\n      throw new TypeError(this.constructAmountRequirementsError('destMin'));\n    default:\n      break;\n  }\n\n  var attributes = {};\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\n  attributes.sendAmount = this._toXDRAmount(opts.sendAmount);\n  try {\n    attributes.destination = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.destination);\n  } catch (e) {\n    throw new Error('destination is invalid');\n  }\n  attributes.destAsset = opts.destAsset.toXDRObject();\n  attributes.destMin = this._toXDRAmount(opts.destMin);\n\n  var path = opts.path ? opts.path : [];\n  attributes.path = path.map(function (x) {\n    return x.toXDRObject();\n  });\n\n  var payment = new _stellarXdr_generated2.default.PathPaymentStrictSendOp(attributes);\n\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.pathPaymentStrictSend(payment);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"]},"metadata":{},"sourceType":"script"}