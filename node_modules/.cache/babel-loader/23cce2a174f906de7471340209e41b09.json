{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.manageSellOffer = manageSellOffer;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _jsXdr = require('js-xdr');\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns a XDR ManageSellOfferOp. A \"manage sell offer\" operation creates, updates, or\n * deletes an offer.\n * @function\n * @alias Operation.manageSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageSellOfferOp} Manage Sell Offer operation\n */\n\n\nfunction manageSellOffer(opts) {\n  var attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n\n  if (!this.isValidAmount(opts.amount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n\n  attributes.amount = this._toXDRAmount(opts.amount);\n\n  if ((0, _isUndefined2.default)(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (!(0, _isUndefined2.default)(opts.offerId)) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = _jsXdr.Hyper.fromString(opts.offerId);\n  var manageSellOfferOp = new _stellarXdr_generated2.default.ManageSellOfferOp(attributes);\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.manageSellOffer(manageSellOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"sources":["/home/manuel/Escritorio/blockchain_code/blockchain-crowdfunding/test_crowdfundig/node_modules/stellar-base/lib/operations/manage_sell_offer.js"],"names":["Object","defineProperty","exports","value","manageSellOffer","_isUndefined","require","_isUndefined2","_interopRequireDefault","_jsXdr","_stellarXdr_generated","_stellarXdr_generated2","obj","__esModule","default","opts","attributes","selling","toXDRObject","buying","isValidAmount","amount","TypeError","constructAmountRequirementsError","_toXDRAmount","price","_toXDRPrice","offerId","toString","Hyper","fromString","manageSellOfferOp","ManageSellOfferOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAD,CAA1C;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,oCAAD,CAAnC;;AAEA,IAAIK,sBAAsB,GAAGH,sBAAsB,CAACE,qBAAD,CAAnD;;AAEA,SAASF,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASR,eAAT,CAAyBW,IAAzB,EAA+B;AAC7B,MAAIC,UAAU,GAAG,EAAjB;AACAA,EAAAA,UAAU,CAACC,OAAX,GAAqBF,IAAI,CAACE,OAAL,CAAaC,WAAb,EAArB;AACAF,EAAAA,UAAU,CAACG,MAAX,GAAoBJ,IAAI,CAACI,MAAL,CAAYD,WAAZ,EAApB;;AACA,MAAI,CAAC,KAAKE,aAAL,CAAmBL,IAAI,CAACM,MAAxB,EAAgC,IAAhC,CAAL,EAA4C;AAC1C,UAAM,IAAIC,SAAJ,CAAc,KAAKC,gCAAL,CAAsC,QAAtC,CAAd,CAAN;AACD;;AACDP,EAAAA,UAAU,CAACK,MAAX,GAAoB,KAAKG,YAAL,CAAkBT,IAAI,CAACM,MAAvB,CAApB;;AACA,MAAI,CAAC,GAAGd,aAAa,CAACO,OAAlB,EAA2BC,IAAI,CAACU,KAAhC,CAAJ,EAA4C;AAC1C,UAAM,IAAIH,SAAJ,CAAc,4BAAd,CAAN;AACD;;AACDN,EAAAA,UAAU,CAACS,KAAX,GAAmB,KAAKC,WAAL,CAAiBX,IAAI,CAACU,KAAtB,CAAnB;;AAEA,MAAI,CAAC,CAAC,GAAGlB,aAAa,CAACO,OAAlB,EAA2BC,IAAI,CAACY,OAAhC,CAAL,EAA+C;AAC7CZ,IAAAA,IAAI,CAACY,OAAL,GAAeZ,IAAI,CAACY,OAAL,CAAaC,QAAb,EAAf;AACD,GAFD,MAEO;AACLb,IAAAA,IAAI,CAACY,OAAL,GAAe,GAAf;AACD;;AAEDX,EAAAA,UAAU,CAACW,OAAX,GAAqBlB,MAAM,CAACoB,KAAP,CAAaC,UAAb,CAAwBf,IAAI,CAACY,OAA7B,CAArB;AACA,MAAII,iBAAiB,GAAG,IAAIpB,sBAAsB,CAACG,OAAvB,CAA+BkB,iBAAnC,CAAqDhB,UAArD,CAAxB;AAEA,MAAIiB,YAAY,GAAG,EAAnB;AACAA,EAAAA,YAAY,CAACC,IAAb,GAAoBvB,sBAAsB,CAACG,OAAvB,CAA+BqB,aAA/B,CAA6C/B,eAA7C,CAA6D2B,iBAA7D,CAApB;AACA,OAAKK,gBAAL,CAAsBH,YAAtB,EAAoClB,IAApC;AAEA,SAAO,IAAIJ,sBAAsB,CAACG,OAAvB,CAA+BuB,SAAnC,CAA6CJ,YAA7C,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.manageSellOffer = manageSellOffer;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _jsXdr = require('js-xdr');\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a XDR ManageSellOfferOp. A \"manage sell offer\" operation creates, updates, or\n * deletes an offer.\n * @function\n * @alias Operation.manageSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageSellOfferOp} Manage Sell Offer operation\n */\nfunction manageSellOffer(opts) {\n  var attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.amount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  if ((0, _isUndefined2.default)(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (!(0, _isUndefined2.default)(opts.offerId)) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = _jsXdr.Hyper.fromString(opts.offerId);\n  var manageSellOfferOp = new _stellarXdr_generated2.default.ManageSellOfferOp(attributes);\n\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.manageSellOffer(manageSellOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"]},"metadata":{},"sourceType":"script"}