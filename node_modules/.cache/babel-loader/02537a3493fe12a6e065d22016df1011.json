{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Operation = exports.AuthImmutableFlag = exports.AuthRevocableFlag = exports.AuthRequiredFlag = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n/* eslint-disable no-bitwise */\n\n\nvar _jsXdr = require('js-xdr');\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nvar _trimEnd = require('lodash/trimEnd');\n\nvar _trimEnd2 = _interopRequireDefault(_trimEnd);\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _isNumber = require('lodash/isNumber');\n\nvar _isNumber2 = _interopRequireDefault(_isNumber);\n\nvar _isFinite = require('lodash/isFinite');\n\nvar _isFinite2 = _interopRequireDefault(_isFinite);\n\nvar _continued_fraction = require('./util/continued_fraction');\n\nvar _asset = require('./asset');\n\nvar _claimant = require('./claimant');\n\nvar _strkey = require('./strkey');\n\nvar _stellarXdr_generated = require('./generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _index = require('./operations/index');\n\nvar ops = _interopRequireWildcard(_index);\n\nvar _decode_encode_muxed_account = require('./util/decode_encode_muxed_account');\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar ONE = 10000000;\nvar MAX_INT64 = '9223372036854775807';\n/**\n * When set using `{@link Operation.setOptions}` option, requires the issuing account to\n * give other accounts permission before they can hold the issuing accountâ€™s credit.\n * @constant\n * @see [Account flags](https://www.stellar.org/developers/guides/concepts/accounts.html#flags)\n */\n\nvar AuthRequiredFlag = exports.AuthRequiredFlag = 1 << 0;\n/**\n * When set using `{@link Operation.setOptions}` option, allows the issuing account to\n * revoke its credit held by other accounts.\n * @constant\n * @see [Account flags](https://www.stellar.org/developers/guides/concepts/accounts.html#flags)\n */\n\nvar AuthRevocableFlag = exports.AuthRevocableFlag = 1 << 1;\n/**\n * When set using `{@link Operation.setOptions}` option, then none of the authorization flags\n * can be set and the account can never be deleted.\n * @constant\n * @see [Account flags](https://www.stellar.org/developers/guides/concepts/accounts.html#flags)\n */\n\nvar AuthImmutableFlag = exports.AuthImmutableFlag = 1 << 2;\n/**\n * `Operation` class represents [operations](https://www.stellar.org/developers/guides/concepts/operations.html) in Stellar network.\n * Use one of static methods to create operations:\n * * `{@link Operation.createAccount}`\n * * `{@link Operation.payment}`\n * * `{@link Operation.pathPaymentStrictReceive}`\n * * `{@link Operation.pathPaymentStrictSend}`\n * * `{@link Operation.manageSellOffer}`\n * * `{@link Operation.manageBuyOffer}`\n * * `{@link Operation.createPassiveSellOffer}`\n * * `{@link Operation.setOptions}`\n * * `{@link Operation.changeTrust}`\n * * `{@link Operation.allowTrust}`\n * * `{@link Operation.accountMerge}`\n * * `{@link Operation.inflation}`\n * * `{@link Operation.manageData}`\n * * `{@link Operation.bumpSequence}`\n * * `{@link Operation.createClaimableBalance}`\n * * `{@link Operation.claimClaimableBalance}`\n * * `{@link Operation.beginSponsoringFutureReserves}`\n * * `{@link Operation.endSponsoringFutureReserves}`\n * * `{@link Operation.revokeAccountSponsorship}`\n * * `{@link Operation.revokeTrustlineSponsorship}`\n * * `{@link Operation.revokeOfferSponsorship}`\n * * `{@link Operation.revokeDataSponsorship}`\n * * `{@link Operation.revokeClaimableBalanceSponsorship}`\n * * `{@link Operation.revokeSignerSponsorship}`\n *\n * @class Operation\n */\n\nvar Operation = exports.Operation = function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, null, [{\n    key: 'setSourceAccount',\n    value: function setSourceAccount(opAttributes, opts) {\n      if (opts.source) {\n        try {\n          opAttributes.sourceAccount = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.source);\n        } catch (e) {\n          throw new Error('Source address is invalid');\n        }\n      }\n    }\n    /**\n     * Converts the XDR Operation object to the opts object used to create the XDR\n     * operation.\n     * @param {xdr.Operation} operation - An XDR Operation.\n     * @return {Operation}\n     */\n\n  }, {\n    key: 'fromXDRObject',\n    value: function fromXDRObject(operation) {\n      var result = {};\n\n      if (operation.sourceAccount()) {\n        result.source = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(operation.sourceAccount());\n      }\n\n      var attrs = operation.body().value();\n      var operationName = operation.body().switch().name;\n\n      switch (operationName) {\n        case 'createAccount':\n          {\n            result.type = 'createAccount';\n            result.destination = accountIdtoAddress(attrs.destination());\n            result.startingBalance = this._fromXDRAmount(attrs.startingBalance());\n            break;\n          }\n\n        case 'payment':\n          {\n            result.type = 'payment';\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());\n            result.asset = _asset.Asset.fromOperation(attrs.asset());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            break;\n          }\n\n        case 'pathPaymentStrictReceive':\n          {\n            result.type = 'pathPaymentStrictReceive';\n            result.sendAsset = _asset.Asset.fromOperation(attrs.sendAsset());\n            result.sendMax = this._fromXDRAmount(attrs.sendMax());\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());\n            result.destAsset = _asset.Asset.fromOperation(attrs.destAsset());\n            result.destAmount = this._fromXDRAmount(attrs.destAmount());\n            result.path = [];\n            var path = attrs.path(); // note that Object.values isn't supported by node 6!\n\n            Object.keys(path).forEach(function (pathKey) {\n              result.path.push(_asset.Asset.fromOperation(path[pathKey]));\n            });\n            break;\n          }\n\n        case 'pathPaymentStrictSend':\n          {\n            result.type = 'pathPaymentStrictSend';\n            result.sendAsset = _asset.Asset.fromOperation(attrs.sendAsset());\n            result.sendAmount = this._fromXDRAmount(attrs.sendAmount());\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());\n            result.destAsset = _asset.Asset.fromOperation(attrs.destAsset());\n            result.destMin = this._fromXDRAmount(attrs.destMin());\n            result.path = [];\n\n            var _path = attrs.path(); // note that Object.values isn't supported by node 6!\n\n\n            Object.keys(_path).forEach(function (pathKey) {\n              result.path.push(_asset.Asset.fromOperation(_path[pathKey]));\n            });\n            break;\n          }\n\n        case 'changeTrust':\n          {\n            result.type = 'changeTrust';\n            result.line = _asset.Asset.fromOperation(attrs.line());\n            result.limit = this._fromXDRAmount(attrs.limit());\n            break;\n          }\n\n        case 'allowTrust':\n          {\n            result.type = 'allowTrust';\n            result.trustor = accountIdtoAddress(attrs.trustor());\n            result.assetCode = attrs.asset().value().toString();\n            result.assetCode = (0, _trimEnd2.default)(result.assetCode, '\\0');\n            result.authorize = attrs.authorize();\n            break;\n          }\n\n        case 'setOptions':\n          {\n            result.type = 'setOptions';\n\n            if (attrs.inflationDest()) {\n              result.inflationDest = accountIdtoAddress(attrs.inflationDest());\n            }\n\n            result.clearFlags = attrs.clearFlags();\n            result.setFlags = attrs.setFlags();\n            result.masterWeight = attrs.masterWeight();\n            result.lowThreshold = attrs.lowThreshold();\n            result.medThreshold = attrs.medThreshold();\n            result.highThreshold = attrs.highThreshold(); // home_domain is checked by iscntrl in stellar-core\n\n            result.homeDomain = attrs.homeDomain() !== undefined ? attrs.homeDomain().toString('ascii') : undefined;\n\n            if (attrs.signer()) {\n              var signer = {};\n              var arm = attrs.signer().key().arm();\n\n              if (arm === 'ed25519') {\n                signer.ed25519PublicKey = accountIdtoAddress(attrs.signer().key());\n              } else if (arm === 'preAuthTx') {\n                signer.preAuthTx = attrs.signer().key().preAuthTx();\n              } else if (arm === 'hashX') {\n                signer.sha256Hash = attrs.signer().key().hashX();\n              }\n\n              signer.weight = attrs.signer().weight();\n              result.signer = signer;\n            }\n\n            break;\n          }\n        // the next case intentionally falls through!\n\n        case 'manageOffer':\n        case 'manageSellOffer':\n          {\n            result.type = 'manageSellOffer';\n            result.selling = _asset.Asset.fromOperation(attrs.selling());\n            result.buying = _asset.Asset.fromOperation(attrs.buying());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            result.price = this._fromXDRPrice(attrs.price());\n            result.offerId = attrs.offerId().toString();\n            break;\n          }\n\n        case 'manageBuyOffer':\n          {\n            result.type = 'manageBuyOffer';\n            result.selling = _asset.Asset.fromOperation(attrs.selling());\n            result.buying = _asset.Asset.fromOperation(attrs.buying());\n            result.buyAmount = this._fromXDRAmount(attrs.buyAmount());\n            result.price = this._fromXDRPrice(attrs.price());\n            result.offerId = attrs.offerId().toString();\n            break;\n          }\n        // the next case intentionally falls through!\n\n        case 'createPassiveOffer':\n        case 'createPassiveSellOffer':\n          {\n            result.type = 'createPassiveSellOffer';\n            result.selling = _asset.Asset.fromOperation(attrs.selling());\n            result.buying = _asset.Asset.fromOperation(attrs.buying());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            result.price = this._fromXDRPrice(attrs.price());\n            break;\n          }\n\n        case 'accountMerge':\n          {\n            result.type = 'accountMerge';\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs);\n            break;\n          }\n\n        case 'manageData':\n          {\n            result.type = 'manageData'; // manage_data.name is checked by iscntrl in stellar-core\n\n            result.name = attrs.dataName().toString('ascii');\n            result.value = attrs.dataValue();\n            break;\n          }\n\n        case 'inflation':\n          {\n            result.type = 'inflation';\n            break;\n          }\n\n        case 'bumpSequence':\n          {\n            result.type = 'bumpSequence';\n            result.bumpTo = attrs.bumpTo().toString();\n            break;\n          }\n\n        case 'createClaimableBalance':\n          {\n            result.type = 'createClaimableBalance';\n            result.asset = _asset.Asset.fromOperation(attrs.asset());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            result.claimants = [];\n            attrs.claimants().forEach(function (claimant) {\n              result.claimants.push(_claimant.Claimant.fromXDR(claimant));\n            });\n            break;\n          }\n\n        case 'claimClaimableBalance':\n          {\n            result.type = 'claimClaimableBalance';\n            result.balanceId = attrs.toXDR('hex');\n            break;\n          }\n\n        case 'beginSponsoringFutureReserves':\n          {\n            result.type = 'beginSponsoringFutureReserves';\n            result.sponsoredId = accountIdtoAddress(attrs.sponsoredId());\n            break;\n          }\n\n        case 'endSponsoringFutureReserves':\n          {\n            result.type = 'endSponsoringFutureReserves';\n            break;\n          }\n\n        case 'revokeSponsorship':\n          {\n            extractRevokeSponshipDetails(attrs, result);\n            break;\n          }\n\n        default:\n          {\n            throw new Error('Unknown operation: ' + operationName);\n          }\n      }\n\n      return result;\n    }\n  }, {\n    key: 'isValidAmount',\n    value: function isValidAmount(value) {\n      var allowZero = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(0, _isString2.default)(value)) {\n        return false;\n      }\n\n      var amount = void 0;\n\n      try {\n        amount = new _bignumber2.default(value);\n      } catch (e) {\n        return false;\n      }\n\n      if ( // == 0\n      !allowZero && amount.isZero() || // < 0\n      amount.isNegative() || // > Max value\n      amount.times(ONE).greaterThan(new _bignumber2.default(MAX_INT64).toString()) || // Decimal places (max 7)\n      amount.decimalPlaces() > 7 || // NaN or Infinity\n      amount.isNaN() || !amount.isFinite()) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'constructAmountRequirementsError',\n    value: function constructAmountRequirementsError(arg) {\n      return arg + ' argument must be of type String, represent a positive number and have at most 7 digits after the decimal';\n    }\n    /**\n     * Returns value converted to uint32 value or undefined.\n     * If `value` is not `Number`, `String` or `Undefined` then throws an error.\n     * Used in {@link Operation.setOptions}.\n     * @private\n     * @param {string} name Name of the property (used in error message only)\n     * @param {*} value Value to check\n     * @param {function(value, name)} isValidFunction Function to check other constraints (the argument will be a `Number`)\n     * @returns {undefined|Number}\n     */\n\n  }, {\n    key: '_checkUnsignedIntValue',\n    value: function _checkUnsignedIntValue(name, value) {\n      var isValidFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if ((0, _isUndefined2.default)(value)) {\n        return undefined;\n      }\n\n      if ((0, _isString2.default)(value)) {\n        value = parseFloat(value);\n      }\n\n      switch (true) {\n        case !(0, _isNumber2.default)(value) || !(0, _isFinite2.default)(value) || value % 1 !== 0:\n          throw new Error(name + ' value is invalid');\n\n        case value < 0:\n          throw new Error(name + ' value must be unsigned');\n\n        case !isValidFunction || isValidFunction && isValidFunction(value, name):\n          return value;\n\n        default:\n          throw new Error(name + ' value is invalid');\n      }\n    }\n    /**\n     * @private\n     * @param {string|BigNumber} value Value\n     * @returns {Hyper} XDR amount\n     */\n\n  }, {\n    key: '_toXDRAmount',\n    value: function _toXDRAmount(value) {\n      var amount = new _bignumber2.default(value).mul(ONE);\n      return _jsXdr.Hyper.fromString(amount.toString());\n    }\n    /**\n     * @private\n     * @param {string|BigNumber} value XDR amount\n     * @returns {BigNumber} Number\n     */\n\n  }, {\n    key: '_fromXDRAmount',\n    value: function _fromXDRAmount(value) {\n      return new _bignumber2.default(value).div(ONE).toFixed(7);\n    }\n    /**\n     * @private\n     * @param {object} price Price object\n     * @param {function} price.n numerator function that returns a value\n     * @param {function} price.d denominator function that returns a value\n     * @returns {BigNumber} Big string\n     */\n\n  }, {\n    key: '_fromXDRPrice',\n    value: function _fromXDRPrice(price) {\n      var n = new _bignumber2.default(price.n());\n      return n.div(new _bignumber2.default(price.d())).toString();\n    }\n    /**\n     * @private\n     * @param {object} price Price object\n     * @param {function} price.n numerator function that returns a value\n     * @param {function} price.d denominator function that returns a value\n     * @returns {object} XDR price object\n     */\n\n  }, {\n    key: '_toXDRPrice',\n    value: function _toXDRPrice(price) {\n      var xdrObject = void 0;\n\n      if (price.n && price.d) {\n        xdrObject = new _stellarXdr_generated2.default.Price(price);\n      } else {\n        price = new _bignumber2.default(price);\n        var approx = (0, _continued_fraction.best_r)(price);\n        xdrObject = new _stellarXdr_generated2.default.Price({\n          n: parseInt(approx[0], 10),\n          d: parseInt(approx[1], 10)\n        });\n      }\n\n      if (xdrObject.n() < 0 || xdrObject.d() < 0) {\n        throw new Error('price must be positive');\n      }\n\n      return xdrObject;\n    }\n  }]);\n\n  return Operation;\n}();\n\nfunction extractRevokeSponshipDetails(attrs, result) {\n  switch (attrs.switch().name) {\n    case 'revokeSponsorshipLedgerEntry':\n      {\n        var ledgerKey = attrs.ledgerKey();\n\n        switch (ledgerKey.switch().name) {\n          case _stellarXdr_generated2.default.LedgerEntryType.account().name:\n            {\n              result.type = 'revokeAccountSponsorship';\n              result.account = accountIdtoAddress(ledgerKey.account().accountId());\n              break;\n            }\n\n          case _stellarXdr_generated2.default.LedgerEntryType.trustline().name:\n            {\n              result.type = 'revokeTrustlineSponsorship';\n              result.account = accountIdtoAddress(ledgerKey.trustLine().accountId());\n              result.asset = _asset.Asset.fromOperation(ledgerKey.trustLine().asset());\n              break;\n            }\n\n          case _stellarXdr_generated2.default.LedgerEntryType.offer().name:\n            {\n              result.type = 'revokeOfferSponsorship';\n              result.seller = accountIdtoAddress(ledgerKey.offer().sellerId());\n              result.offerId = ledgerKey.offer().offerId().toString();\n              break;\n            }\n\n          case _stellarXdr_generated2.default.LedgerEntryType.data().name:\n            {\n              result.type = 'revokeDataSponsorship';\n              result.account = accountIdtoAddress(ledgerKey.data().accountId());\n              result.name = ledgerKey.data().dataName().toString('ascii');\n              break;\n            }\n\n          case _stellarXdr_generated2.default.LedgerEntryType.claimableBalance().name:\n            {\n              result.type = 'revokeClaimableBalanceSponsorship';\n              result.balanceId = ledgerKey.claimableBalance().balanceId().toXDR('hex');\n              break;\n            }\n\n          default:\n            {\n              throw new Error('Unknown ledgerKey: ' + attrs.switch().name);\n            }\n        }\n\n        break;\n      }\n\n    case 'revokeSponsorshipSigner':\n      {\n        result.type = 'revokeSignerSponsorship';\n        result.account = accountIdtoAddress(attrs.signer().accountId());\n        result.signer = convertXDRSignerKeyToObject(attrs.signer().signerKey());\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unknown revokeSponsorship: ' + attrs.switch().name);\n      }\n  }\n}\n\nfunction convertXDRSignerKeyToObject(signerKey) {\n  var attrs = {};\n\n  switch (signerKey.switch().name) {\n    case _stellarXdr_generated2.default.SignerKeyType.signerKeyTypeEd25519().name:\n      {\n        attrs.ed25519PublicKey = _strkey.StrKey.encodeEd25519PublicKey(signerKey.ed25519());\n        break;\n      }\n\n    case _stellarXdr_generated2.default.SignerKeyType.signerKeyTypePreAuthTx().name:\n      {\n        attrs.preAuthTx = signerKey.preAuthTx().toString('hex');\n        break;\n      }\n\n    case _stellarXdr_generated2.default.SignerKeyType.signerKeyTypeHashX().name:\n      {\n        attrs.sha256Hash = signerKey.hashX().toString('hex');\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Unknown signerKey: ' + signerKey.switch().name);\n      }\n  }\n\n  return attrs;\n}\n\nfunction accountIdtoAddress(accountId) {\n  return _strkey.StrKey.encodeEd25519PublicKey(accountId.ed25519());\n} // Attach all imported operations as static methods on the Operation class\n\n\nOperation.accountMerge = ops.accountMerge;\nOperation.allowTrust = ops.allowTrust;\nOperation.bumpSequence = ops.bumpSequence;\nOperation.changeTrust = ops.changeTrust;\nOperation.createAccount = ops.createAccount;\nOperation.createClaimableBalance = ops.createClaimableBalance;\nOperation.claimClaimableBalance = ops.claimClaimableBalance;\nOperation.createPassiveSellOffer = ops.createPassiveSellOffer;\nOperation.inflation = ops.inflation;\nOperation.manageData = ops.manageData;\nOperation.manageSellOffer = ops.manageSellOffer;\nOperation.manageBuyOffer = ops.manageBuyOffer;\nOperation.pathPaymentStrictReceive = ops.pathPaymentStrictReceive;\nOperation.pathPaymentStrictSend = ops.pathPaymentStrictSend;\nOperation.payment = ops.payment;\nOperation.setOptions = ops.setOptions;\nOperation.beginSponsoringFutureReserves = ops.beginSponsoringFutureReserves;\nOperation.endSponsoringFutureReserves = ops.endSponsoringFutureReserves;\nOperation.revokeAccountSponsorship = ops.revokeAccountSponsorship;\nOperation.revokeTrustlineSponsorship = ops.revokeTrustlineSponsorship;\nOperation.revokeOfferSponsorship = ops.revokeOfferSponsorship;\nOperation.revokeDataSponsorship = ops.revokeDataSponsorship;\nOperation.revokeClaimableBalanceSponsorship = ops.revokeClaimableBalanceSponsorship;\nOperation.revokeSignerSponsorship = ops.revokeSignerSponsorship;","map":{"version":3,"sources":["/home/manuel/Escritorio/blockchain_code/blockchain-crowdfunding/node_modules/stellar-base/lib/operation.js"],"names":["Object","defineProperty","exports","value","Operation","AuthImmutableFlag","AuthRevocableFlag","AuthRequiredFlag","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_jsXdr","require","_bignumber","_bignumber2","_interopRequireDefault","_trimEnd","_trimEnd2","_isUndefined","_isUndefined2","_isString","_isString2","_isNumber","_isNumber2","_isFinite","_isFinite2","_continued_fraction","_asset","_claimant","_strkey","_stellarXdr_generated","_stellarXdr_generated2","_index","ops","_interopRequireWildcard","_decode_encode_muxed_account","obj","__esModule","newObj","hasOwnProperty","call","default","_classCallCheck","instance","TypeError","ONE","MAX_INT64","setSourceAccount","opAttributes","opts","source","sourceAccount","decodeAddressToMuxedAccount","e","Error","fromXDRObject","operation","result","encodeMuxedAccountToAddress","attrs","body","operationName","switch","name","type","destination","accountIdtoAddress","startingBalance","_fromXDRAmount","asset","Asset","fromOperation","amount","sendAsset","sendMax","destAsset","destAmount","path","keys","forEach","pathKey","push","sendAmount","destMin","_path","line","limit","trustor","assetCode","toString","authorize","inflationDest","clearFlags","setFlags","masterWeight","lowThreshold","medThreshold","highThreshold","homeDomain","signer","arm","ed25519PublicKey","preAuthTx","sha256Hash","hashX","weight","selling","buying","price","_fromXDRPrice","offerId","buyAmount","dataName","dataValue","bumpTo","claimants","claimant","Claimant","fromXDR","balanceId","toXDR","sponsoredId","extractRevokeSponshipDetails","isValidAmount","allowZero","arguments","isZero","isNegative","times","greaterThan","decimalPlaces","isNaN","isFinite","constructAmountRequirementsError","arg","_checkUnsignedIntValue","isValidFunction","parseFloat","_toXDRAmount","mul","Hyper","fromString","div","toFixed","n","d","_toXDRPrice","xdrObject","Price","approx","best_r","parseInt","ledgerKey","LedgerEntryType","account","accountId","trustline","trustLine","offer","seller","sellerId","data","claimableBalance","convertXDRSignerKeyToObject","signerKey","SignerKeyType","signerKeyTypeEd25519","StrKey","encodeEd25519PublicKey","ed25519","signerKeyTypePreAuthTx","signerKeyTypeHashX","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createClaimableBalance","claimClaimableBalance","createPassiveSellOffer","inflation","manageData","manageSellOffer","manageBuyOffer","pathPaymentStrictReceive","pathPaymentStrictSend","payment","setOptions","beginSponsoringFutureReserves","endSponsoringFutureReserves","revokeAccountSponsorship","revokeTrustlineSponsorship","revokeOfferSponsorship","revokeDataSponsorship","revokeClaimableBalanceSponsorship","revokeSignerSponsorship"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Operation = exports.AuthImmutableFlag = exports.AuthRevocableFlag = exports.AuthRequiredFlag = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable no-bitwise */\n\nvar _jsXdr = require('js-xdr');\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nvar _trimEnd = require('lodash/trimEnd');\n\nvar _trimEnd2 = _interopRequireDefault(_trimEnd);\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _isNumber = require('lodash/isNumber');\n\nvar _isNumber2 = _interopRequireDefault(_isNumber);\n\nvar _isFinite = require('lodash/isFinite');\n\nvar _isFinite2 = _interopRequireDefault(_isFinite);\n\nvar _continued_fraction = require('./util/continued_fraction');\n\nvar _asset = require('./asset');\n\nvar _claimant = require('./claimant');\n\nvar _strkey = require('./strkey');\n\nvar _stellarXdr_generated = require('./generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _index = require('./operations/index');\n\nvar ops = _interopRequireWildcard(_index);\n\nvar _decode_encode_muxed_account = require('./util/decode_encode_muxed_account');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ONE = 10000000;\nvar MAX_INT64 = '9223372036854775807';\n\n/**\n * When set using `{@link Operation.setOptions}` option, requires the issuing account to\n * give other accounts permission before they can hold the issuing accountâ€™s credit.\n * @constant\n * @see [Account flags](https://www.stellar.org/developers/guides/concepts/accounts.html#flags)\n */\nvar AuthRequiredFlag = exports.AuthRequiredFlag = 1 << 0;\n/**\n * When set using `{@link Operation.setOptions}` option, allows the issuing account to\n * revoke its credit held by other accounts.\n * @constant\n * @see [Account flags](https://www.stellar.org/developers/guides/concepts/accounts.html#flags)\n */\nvar AuthRevocableFlag = exports.AuthRevocableFlag = 1 << 1;\n/**\n * When set using `{@link Operation.setOptions}` option, then none of the authorization flags\n * can be set and the account can never be deleted.\n * @constant\n * @see [Account flags](https://www.stellar.org/developers/guides/concepts/accounts.html#flags)\n */\nvar AuthImmutableFlag = exports.AuthImmutableFlag = 1 << 2;\n\n/**\n * `Operation` class represents [operations](https://www.stellar.org/developers/guides/concepts/operations.html) in Stellar network.\n * Use one of static methods to create operations:\n * * `{@link Operation.createAccount}`\n * * `{@link Operation.payment}`\n * * `{@link Operation.pathPaymentStrictReceive}`\n * * `{@link Operation.pathPaymentStrictSend}`\n * * `{@link Operation.manageSellOffer}`\n * * `{@link Operation.manageBuyOffer}`\n * * `{@link Operation.createPassiveSellOffer}`\n * * `{@link Operation.setOptions}`\n * * `{@link Operation.changeTrust}`\n * * `{@link Operation.allowTrust}`\n * * `{@link Operation.accountMerge}`\n * * `{@link Operation.inflation}`\n * * `{@link Operation.manageData}`\n * * `{@link Operation.bumpSequence}`\n * * `{@link Operation.createClaimableBalance}`\n * * `{@link Operation.claimClaimableBalance}`\n * * `{@link Operation.beginSponsoringFutureReserves}`\n * * `{@link Operation.endSponsoringFutureReserves}`\n * * `{@link Operation.revokeAccountSponsorship}`\n * * `{@link Operation.revokeTrustlineSponsorship}`\n * * `{@link Operation.revokeOfferSponsorship}`\n * * `{@link Operation.revokeDataSponsorship}`\n * * `{@link Operation.revokeClaimableBalanceSponsorship}`\n * * `{@link Operation.revokeSignerSponsorship}`\n *\n * @class Operation\n */\n\nvar Operation = exports.Operation = function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, null, [{\n    key: 'setSourceAccount',\n    value: function setSourceAccount(opAttributes, opts) {\n      if (opts.source) {\n        try {\n          opAttributes.sourceAccount = (0, _decode_encode_muxed_account.decodeAddressToMuxedAccount)(opts.source);\n        } catch (e) {\n          throw new Error('Source address is invalid');\n        }\n      }\n    }\n\n    /**\n     * Converts the XDR Operation object to the opts object used to create the XDR\n     * operation.\n     * @param {xdr.Operation} operation - An XDR Operation.\n     * @return {Operation}\n     */\n\n  }, {\n    key: 'fromXDRObject',\n    value: function fromXDRObject(operation) {\n      var result = {};\n      if (operation.sourceAccount()) {\n        result.source = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(operation.sourceAccount());\n      }\n\n      var attrs = operation.body().value();\n      var operationName = operation.body().switch().name;\n\n      switch (operationName) {\n        case 'createAccount':\n          {\n            result.type = 'createAccount';\n            result.destination = accountIdtoAddress(attrs.destination());\n            result.startingBalance = this._fromXDRAmount(attrs.startingBalance());\n            break;\n          }\n        case 'payment':\n          {\n            result.type = 'payment';\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());\n            result.asset = _asset.Asset.fromOperation(attrs.asset());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            break;\n          }\n        case 'pathPaymentStrictReceive':\n          {\n            result.type = 'pathPaymentStrictReceive';\n            result.sendAsset = _asset.Asset.fromOperation(attrs.sendAsset());\n            result.sendMax = this._fromXDRAmount(attrs.sendMax());\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());\n            result.destAsset = _asset.Asset.fromOperation(attrs.destAsset());\n            result.destAmount = this._fromXDRAmount(attrs.destAmount());\n            result.path = [];\n\n            var path = attrs.path();\n\n            // note that Object.values isn't supported by node 6!\n            Object.keys(path).forEach(function (pathKey) {\n              result.path.push(_asset.Asset.fromOperation(path[pathKey]));\n            });\n            break;\n          }\n        case 'pathPaymentStrictSend':\n          {\n            result.type = 'pathPaymentStrictSend';\n            result.sendAsset = _asset.Asset.fromOperation(attrs.sendAsset());\n            result.sendAmount = this._fromXDRAmount(attrs.sendAmount());\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs.destination());\n            result.destAsset = _asset.Asset.fromOperation(attrs.destAsset());\n            result.destMin = this._fromXDRAmount(attrs.destMin());\n            result.path = [];\n\n            var _path = attrs.path();\n\n            // note that Object.values isn't supported by node 6!\n            Object.keys(_path).forEach(function (pathKey) {\n              result.path.push(_asset.Asset.fromOperation(_path[pathKey]));\n            });\n            break;\n          }\n        case 'changeTrust':\n          {\n            result.type = 'changeTrust';\n            result.line = _asset.Asset.fromOperation(attrs.line());\n            result.limit = this._fromXDRAmount(attrs.limit());\n            break;\n          }\n        case 'allowTrust':\n          {\n            result.type = 'allowTrust';\n            result.trustor = accountIdtoAddress(attrs.trustor());\n            result.assetCode = attrs.asset().value().toString();\n            result.assetCode = (0, _trimEnd2.default)(result.assetCode, '\\0');\n            result.authorize = attrs.authorize();\n            break;\n          }\n        case 'setOptions':\n          {\n            result.type = 'setOptions';\n            if (attrs.inflationDest()) {\n              result.inflationDest = accountIdtoAddress(attrs.inflationDest());\n            }\n\n            result.clearFlags = attrs.clearFlags();\n            result.setFlags = attrs.setFlags();\n            result.masterWeight = attrs.masterWeight();\n            result.lowThreshold = attrs.lowThreshold();\n            result.medThreshold = attrs.medThreshold();\n            result.highThreshold = attrs.highThreshold();\n            // home_domain is checked by iscntrl in stellar-core\n            result.homeDomain = attrs.homeDomain() !== undefined ? attrs.homeDomain().toString('ascii') : undefined;\n\n            if (attrs.signer()) {\n              var signer = {};\n              var arm = attrs.signer().key().arm();\n              if (arm === 'ed25519') {\n                signer.ed25519PublicKey = accountIdtoAddress(attrs.signer().key());\n              } else if (arm === 'preAuthTx') {\n                signer.preAuthTx = attrs.signer().key().preAuthTx();\n              } else if (arm === 'hashX') {\n                signer.sha256Hash = attrs.signer().key().hashX();\n              }\n\n              signer.weight = attrs.signer().weight();\n              result.signer = signer;\n            }\n            break;\n          }\n        // the next case intentionally falls through!\n        case 'manageOffer':\n        case 'manageSellOffer':\n          {\n            result.type = 'manageSellOffer';\n            result.selling = _asset.Asset.fromOperation(attrs.selling());\n            result.buying = _asset.Asset.fromOperation(attrs.buying());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            result.price = this._fromXDRPrice(attrs.price());\n            result.offerId = attrs.offerId().toString();\n            break;\n          }\n        case 'manageBuyOffer':\n          {\n            result.type = 'manageBuyOffer';\n            result.selling = _asset.Asset.fromOperation(attrs.selling());\n            result.buying = _asset.Asset.fromOperation(attrs.buying());\n            result.buyAmount = this._fromXDRAmount(attrs.buyAmount());\n            result.price = this._fromXDRPrice(attrs.price());\n            result.offerId = attrs.offerId().toString();\n            break;\n          }\n        // the next case intentionally falls through!\n        case 'createPassiveOffer':\n        case 'createPassiveSellOffer':\n          {\n            result.type = 'createPassiveSellOffer';\n            result.selling = _asset.Asset.fromOperation(attrs.selling());\n            result.buying = _asset.Asset.fromOperation(attrs.buying());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            result.price = this._fromXDRPrice(attrs.price());\n            break;\n          }\n        case 'accountMerge':\n          {\n            result.type = 'accountMerge';\n            result.destination = (0, _decode_encode_muxed_account.encodeMuxedAccountToAddress)(attrs);\n            break;\n          }\n        case 'manageData':\n          {\n            result.type = 'manageData';\n            // manage_data.name is checked by iscntrl in stellar-core\n            result.name = attrs.dataName().toString('ascii');\n            result.value = attrs.dataValue();\n            break;\n          }\n        case 'inflation':\n          {\n            result.type = 'inflation';\n            break;\n          }\n        case 'bumpSequence':\n          {\n            result.type = 'bumpSequence';\n            result.bumpTo = attrs.bumpTo().toString();\n            break;\n          }\n        case 'createClaimableBalance':\n          {\n            result.type = 'createClaimableBalance';\n            result.asset = _asset.Asset.fromOperation(attrs.asset());\n            result.amount = this._fromXDRAmount(attrs.amount());\n            result.claimants = [];\n            attrs.claimants().forEach(function (claimant) {\n              result.claimants.push(_claimant.Claimant.fromXDR(claimant));\n            });\n            break;\n          }\n        case 'claimClaimableBalance':\n          {\n            result.type = 'claimClaimableBalance';\n            result.balanceId = attrs.toXDR('hex');\n            break;\n          }\n        case 'beginSponsoringFutureReserves':\n          {\n            result.type = 'beginSponsoringFutureReserves';\n            result.sponsoredId = accountIdtoAddress(attrs.sponsoredId());\n            break;\n          }\n        case 'endSponsoringFutureReserves':\n          {\n            result.type = 'endSponsoringFutureReserves';\n            break;\n          }\n        case 'revokeSponsorship':\n          {\n            extractRevokeSponshipDetails(attrs, result);\n            break;\n          }\n        default:\n          {\n            throw new Error('Unknown operation: ' + operationName);\n          }\n      }\n      return result;\n    }\n  }, {\n    key: 'isValidAmount',\n    value: function isValidAmount(value) {\n      var allowZero = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(0, _isString2.default)(value)) {\n        return false;\n      }\n\n      var amount = void 0;\n      try {\n        amount = new _bignumber2.default(value);\n      } catch (e) {\n        return false;\n      }\n\n      if (\n      // == 0\n      !allowZero && amount.isZero() ||\n      // < 0\n      amount.isNegative() ||\n      // > Max value\n      amount.times(ONE).greaterThan(new _bignumber2.default(MAX_INT64).toString()) ||\n      // Decimal places (max 7)\n      amount.decimalPlaces() > 7 ||\n      // NaN or Infinity\n      amount.isNaN() || !amount.isFinite()) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'constructAmountRequirementsError',\n    value: function constructAmountRequirementsError(arg) {\n      return arg + ' argument must be of type String, represent a positive number and have at most 7 digits after the decimal';\n    }\n\n    /**\n     * Returns value converted to uint32 value or undefined.\n     * If `value` is not `Number`, `String` or `Undefined` then throws an error.\n     * Used in {@link Operation.setOptions}.\n     * @private\n     * @param {string} name Name of the property (used in error message only)\n     * @param {*} value Value to check\n     * @param {function(value, name)} isValidFunction Function to check other constraints (the argument will be a `Number`)\n     * @returns {undefined|Number}\n     */\n\n  }, {\n    key: '_checkUnsignedIntValue',\n    value: function _checkUnsignedIntValue(name, value) {\n      var isValidFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if ((0, _isUndefined2.default)(value)) {\n        return undefined;\n      }\n\n      if ((0, _isString2.default)(value)) {\n        value = parseFloat(value);\n      }\n\n      switch (true) {\n        case !(0, _isNumber2.default)(value) || !(0, _isFinite2.default)(value) || value % 1 !== 0:\n          throw new Error(name + ' value is invalid');\n        case value < 0:\n          throw new Error(name + ' value must be unsigned');\n        case !isValidFunction || isValidFunction && isValidFunction(value, name):\n          return value;\n        default:\n          throw new Error(name + ' value is invalid');\n      }\n    }\n    /**\n     * @private\n     * @param {string|BigNumber} value Value\n     * @returns {Hyper} XDR amount\n     */\n\n  }, {\n    key: '_toXDRAmount',\n    value: function _toXDRAmount(value) {\n      var amount = new _bignumber2.default(value).mul(ONE);\n      return _jsXdr.Hyper.fromString(amount.toString());\n    }\n\n    /**\n     * @private\n     * @param {string|BigNumber} value XDR amount\n     * @returns {BigNumber} Number\n     */\n\n  }, {\n    key: '_fromXDRAmount',\n    value: function _fromXDRAmount(value) {\n      return new _bignumber2.default(value).div(ONE).toFixed(7);\n    }\n\n    /**\n     * @private\n     * @param {object} price Price object\n     * @param {function} price.n numerator function that returns a value\n     * @param {function} price.d denominator function that returns a value\n     * @returns {BigNumber} Big string\n     */\n\n  }, {\n    key: '_fromXDRPrice',\n    value: function _fromXDRPrice(price) {\n      var n = new _bignumber2.default(price.n());\n      return n.div(new _bignumber2.default(price.d())).toString();\n    }\n\n    /**\n     * @private\n     * @param {object} price Price object\n     * @param {function} price.n numerator function that returns a value\n     * @param {function} price.d denominator function that returns a value\n     * @returns {object} XDR price object\n     */\n\n  }, {\n    key: '_toXDRPrice',\n    value: function _toXDRPrice(price) {\n      var xdrObject = void 0;\n      if (price.n && price.d) {\n        xdrObject = new _stellarXdr_generated2.default.Price(price);\n      } else {\n        price = new _bignumber2.default(price);\n        var approx = (0, _continued_fraction.best_r)(price);\n        xdrObject = new _stellarXdr_generated2.default.Price({\n          n: parseInt(approx[0], 10),\n          d: parseInt(approx[1], 10)\n        });\n      }\n\n      if (xdrObject.n() < 0 || xdrObject.d() < 0) {\n        throw new Error('price must be positive');\n      }\n\n      return xdrObject;\n    }\n  }]);\n\n  return Operation;\n}();\n\nfunction extractRevokeSponshipDetails(attrs, result) {\n  switch (attrs.switch().name) {\n    case 'revokeSponsorshipLedgerEntry':\n      {\n        var ledgerKey = attrs.ledgerKey();\n        switch (ledgerKey.switch().name) {\n          case _stellarXdr_generated2.default.LedgerEntryType.account().name:\n            {\n              result.type = 'revokeAccountSponsorship';\n              result.account = accountIdtoAddress(ledgerKey.account().accountId());\n              break;\n            }\n          case _stellarXdr_generated2.default.LedgerEntryType.trustline().name:\n            {\n              result.type = 'revokeTrustlineSponsorship';\n              result.account = accountIdtoAddress(ledgerKey.trustLine().accountId());\n              result.asset = _asset.Asset.fromOperation(ledgerKey.trustLine().asset());\n              break;\n            }\n          case _stellarXdr_generated2.default.LedgerEntryType.offer().name:\n            {\n              result.type = 'revokeOfferSponsorship';\n              result.seller = accountIdtoAddress(ledgerKey.offer().sellerId());\n              result.offerId = ledgerKey.offer().offerId().toString();\n              break;\n            }\n          case _stellarXdr_generated2.default.LedgerEntryType.data().name:\n            {\n              result.type = 'revokeDataSponsorship';\n              result.account = accountIdtoAddress(ledgerKey.data().accountId());\n              result.name = ledgerKey.data().dataName().toString('ascii');\n              break;\n            }\n          case _stellarXdr_generated2.default.LedgerEntryType.claimableBalance().name:\n            {\n              result.type = 'revokeClaimableBalanceSponsorship';\n              result.balanceId = ledgerKey.claimableBalance().balanceId().toXDR('hex');\n              break;\n            }\n          default:\n            {\n              throw new Error('Unknown ledgerKey: ' + attrs.switch().name);\n            }\n        }\n        break;\n      }\n    case 'revokeSponsorshipSigner':\n      {\n        result.type = 'revokeSignerSponsorship';\n        result.account = accountIdtoAddress(attrs.signer().accountId());\n        result.signer = convertXDRSignerKeyToObject(attrs.signer().signerKey());\n        break;\n      }\n    default:\n      {\n        throw new Error('Unknown revokeSponsorship: ' + attrs.switch().name);\n      }\n  }\n}\n\nfunction convertXDRSignerKeyToObject(signerKey) {\n  var attrs = {};\n  switch (signerKey.switch().name) {\n    case _stellarXdr_generated2.default.SignerKeyType.signerKeyTypeEd25519().name:\n      {\n        attrs.ed25519PublicKey = _strkey.StrKey.encodeEd25519PublicKey(signerKey.ed25519());\n        break;\n      }\n    case _stellarXdr_generated2.default.SignerKeyType.signerKeyTypePreAuthTx().name:\n      {\n        attrs.preAuthTx = signerKey.preAuthTx().toString('hex');\n        break;\n      }\n    case _stellarXdr_generated2.default.SignerKeyType.signerKeyTypeHashX().name:\n      {\n        attrs.sha256Hash = signerKey.hashX().toString('hex');\n        break;\n      }\n    default:\n      {\n        throw new Error('Unknown signerKey: ' + signerKey.switch().name);\n      }\n  }\n\n  return attrs;\n}\n\nfunction accountIdtoAddress(accountId) {\n  return _strkey.StrKey.encodeEd25519PublicKey(accountId.ed25519());\n}\n\n// Attach all imported operations as static methods on the Operation class\nOperation.accountMerge = ops.accountMerge;\nOperation.allowTrust = ops.allowTrust;\nOperation.bumpSequence = ops.bumpSequence;\nOperation.changeTrust = ops.changeTrust;\nOperation.createAccount = ops.createAccount;\nOperation.createClaimableBalance = ops.createClaimableBalance;\nOperation.claimClaimableBalance = ops.claimClaimableBalance;\nOperation.createPassiveSellOffer = ops.createPassiveSellOffer;\nOperation.inflation = ops.inflation;\nOperation.manageData = ops.manageData;\nOperation.manageSellOffer = ops.manageSellOffer;\nOperation.manageBuyOffer = ops.manageBuyOffer;\nOperation.pathPaymentStrictReceive = ops.pathPaymentStrictReceive;\nOperation.pathPaymentStrictSend = ops.pathPaymentStrictSend;\nOperation.payment = ops.payment;\nOperation.setOptions = ops.setOptions;\nOperation.beginSponsoringFutureReserves = ops.beginSponsoringFutureReserves;\nOperation.endSponsoringFutureReserves = ops.endSponsoringFutureReserves;\nOperation.revokeAccountSponsorship = ops.revokeAccountSponsorship;\nOperation.revokeTrustlineSponsorship = ops.revokeTrustlineSponsorship;\nOperation.revokeOfferSponsorship = ops.revokeOfferSponsorship;\nOperation.revokeDataSponsorship = ops.revokeDataSponsorship;\nOperation.revokeClaimableBalanceSponsorship = ops.revokeClaimableBalanceSponsorship;\nOperation.revokeSignerSponsorship = ops.revokeSignerSponsorship;"]},"metadata":{},"sourceType":"script"}