{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TradeAggregationCallBuilder = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar call_builder_1 = require(\"./call_builder\");\n\nvar errors_1 = require(\"./errors\");\n\nvar allowedResolutions = [60000, 300000, 900000, 3600000, 86400000, 604800000];\n\nvar TradeAggregationCallBuilder = function (_super) {\n  tslib_1.__extends(TradeAggregationCallBuilder, _super);\n\n  function TradeAggregationCallBuilder(serverUrl, base, counter, start_time, end_time, resolution, offset) {\n    var _this = _super.call(this, serverUrl) || this;\n\n    _this.url.segment(\"trade_aggregations\");\n\n    if (!base.isNative()) {\n      _this.url.setQuery(\"base_asset_type\", base.getAssetType());\n\n      _this.url.setQuery(\"base_asset_code\", base.getCode());\n\n      _this.url.setQuery(\"base_asset_issuer\", base.getIssuer());\n    } else {\n      _this.url.setQuery(\"base_asset_type\", \"native\");\n    }\n\n    if (!counter.isNative()) {\n      _this.url.setQuery(\"counter_asset_type\", counter.getAssetType());\n\n      _this.url.setQuery(\"counter_asset_code\", counter.getCode());\n\n      _this.url.setQuery(\"counter_asset_issuer\", counter.getIssuer());\n    } else {\n      _this.url.setQuery(\"counter_asset_type\", \"native\");\n    }\n\n    if (typeof start_time !== \"number\" || typeof end_time !== \"number\") {\n      throw new errors_1.BadRequestError(\"Invalid time bounds\", [start_time, end_time]);\n    } else {\n      _this.url.setQuery(\"start_time\", start_time.toString());\n\n      _this.url.setQuery(\"end_time\", end_time.toString());\n    }\n\n    if (!_this.isValidResolution(resolution)) {\n      throw new errors_1.BadRequestError(\"Invalid resolution\", resolution);\n    } else {\n      _this.url.setQuery(\"resolution\", resolution.toString());\n    }\n\n    if (!_this.isValidOffset(offset, resolution)) {\n      throw new errors_1.BadRequestError(\"Invalid offset\", offset);\n    } else {\n      _this.url.setQuery(\"offset\", offset.toString());\n    }\n\n    return _this;\n  }\n\n  TradeAggregationCallBuilder.prototype.isValidResolution = function (resolution) {\n    for (var _i = 0, allowedResolutions_1 = allowedResolutions; _i < allowedResolutions_1.length; _i++) {\n      var allowed = allowedResolutions_1[_i];\n\n      if (allowed === resolution) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  TradeAggregationCallBuilder.prototype.isValidOffset = function (offset, resolution) {\n    var hour = 3600000;\n    return !(offset > resolution || offset >= 24 * hour || offset % hour !== 0);\n  };\n\n  return TradeAggregationCallBuilder;\n}(call_builder_1.CallBuilder);\n\nexports.TradeAggregationCallBuilder = TradeAggregationCallBuilder;","map":{"version":3,"sources":["../src/trade_aggregation_call_builder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TradeAggregationCallBuilder = void 0;\nvar tslib_1 = require(\"tslib\");\nvar call_builder_1 = require(\"./call_builder\");\nvar errors_1 = require(\"./errors\");\nvar allowedResolutions = [\n    60000,\n    300000,\n    900000,\n    3600000,\n    86400000,\n    604800000,\n];\nvar TradeAggregationCallBuilder = (function (_super) {\n    tslib_1.__extends(TradeAggregationCallBuilder, _super);\n    function TradeAggregationCallBuilder(serverUrl, base, counter, start_time, end_time, resolution, offset) {\n        var _this = _super.call(this, serverUrl) || this;\n        _this.url.segment(\"trade_aggregations\");\n        if (!base.isNative()) {\n            _this.url.setQuery(\"base_asset_type\", base.getAssetType());\n            _this.url.setQuery(\"base_asset_code\", base.getCode());\n            _this.url.setQuery(\"base_asset_issuer\", base.getIssuer());\n        }\n        else {\n            _this.url.setQuery(\"base_asset_type\", \"native\");\n        }\n        if (!counter.isNative()) {\n            _this.url.setQuery(\"counter_asset_type\", counter.getAssetType());\n            _this.url.setQuery(\"counter_asset_code\", counter.getCode());\n            _this.url.setQuery(\"counter_asset_issuer\", counter.getIssuer());\n        }\n        else {\n            _this.url.setQuery(\"counter_asset_type\", \"native\");\n        }\n        if (typeof start_time !== \"number\" || typeof end_time !== \"number\") {\n            throw new errors_1.BadRequestError(\"Invalid time bounds\", [start_time, end_time]);\n        }\n        else {\n            _this.url.setQuery(\"start_time\", start_time.toString());\n            _this.url.setQuery(\"end_time\", end_time.toString());\n        }\n        if (!_this.isValidResolution(resolution)) {\n            throw new errors_1.BadRequestError(\"Invalid resolution\", resolution);\n        }\n        else {\n            _this.url.setQuery(\"resolution\", resolution.toString());\n        }\n        if (!_this.isValidOffset(offset, resolution)) {\n            throw new errors_1.BadRequestError(\"Invalid offset\", offset);\n        }\n        else {\n            _this.url.setQuery(\"offset\", offset.toString());\n        }\n        return _this;\n    }\n    TradeAggregationCallBuilder.prototype.isValidResolution = function (resolution) {\n        for (var _i = 0, allowedResolutions_1 = allowedResolutions; _i < allowedResolutions_1.length; _i++) {\n            var allowed = allowedResolutions_1[_i];\n            if (allowed === resolution) {\n                return true;\n            }\n        }\n        return false;\n    };\n    TradeAggregationCallBuilder.prototype.isValidOffset = function (offset, resolution) {\n        var hour = 3600000;\n        return !(offset > resolution || offset >= 24 * hour || offset % hour !== 0);\n    };\n    return TradeAggregationCallBuilder;\n}(call_builder_1.CallBuilder));\nexports.TradeAggregationCallBuilder = TradeAggregationCallBuilder;\n//# sourceMappingURL=trade_aggregation_call_builder.js.map"]},"metadata":{},"sourceType":"script"}