{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeTrust = changeTrust;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _jsXdr = require('js-xdr');\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MAX_INT64 = '9223372036854775807';\n/**\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\n * trust line for a given asset from the source account to another. The issuer being\n * trusted and the asset code are in the given Asset object.\n * @function\n * @alias Operation.changeTrust\n * @param {object} opts Options object\n * @param {Asset} opts.asset - The asset for the trust line.\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\n *                                If the limit is set to \"0\" it deletes the trustline.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.ChangeTrustOp} Change Trust operation\n */\n\nfunction changeTrust(opts) {\n  var attributes = {};\n  attributes.line = opts.asset.toXDRObject();\n\n  if (!(0, _isUndefined2.default)(opts.limit) && !this.isValidAmount(opts.limit, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\n  }\n\n  if (opts.limit) {\n    attributes.limit = this._toXDRAmount(opts.limit);\n  } else {\n    attributes.limit = _jsXdr.Hyper.fromString(new _bignumber2.default(MAX_INT64).toString());\n  }\n\n  if (opts.source) {\n    attributes.source = opts.source.masterKeypair;\n  }\n\n  var changeTrustOP = new _stellarXdr_generated2.default.ChangeTrustOp(attributes);\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.changeTrust(changeTrustOP);\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"sources":["/home/manuel/Escritorio/blockchain_code/blockchain-crowdfunding/test_crowdfundig/node_modules/stellar-base/lib/operations/change_trust.js"],"names":["Object","defineProperty","exports","value","changeTrust","_isUndefined","require","_isUndefined2","_interopRequireDefault","_jsXdr","_bignumber","_bignumber2","_stellarXdr_generated","_stellarXdr_generated2","obj","__esModule","default","MAX_INT64","opts","attributes","line","asset","toXDRObject","limit","isValidAmount","TypeError","constructAmountRequirementsError","_toXDRAmount","Hyper","fromString","toString","source","masterKeypair","changeTrustOP","ChangeTrustOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAD,CAA1C;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAII,UAAU,GAAGJ,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIK,WAAW,GAAGH,sBAAsB,CAACE,UAAD,CAAxC;;AAEA,IAAIE,qBAAqB,GAAGN,OAAO,CAAC,oCAAD,CAAnC;;AAEA,IAAIO,sBAAsB,GAAGL,sBAAsB,CAACI,qBAAD,CAAnD;;AAEA,SAASJ,sBAAT,CAAgCM,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,SAAS,GAAG,qBAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASb,WAAT,CAAqBc,IAArB,EAA2B;AACzB,MAAIC,UAAU,GAAG,EAAjB;AACAA,EAAAA,UAAU,CAACC,IAAX,GAAkBF,IAAI,CAACG,KAAL,CAAWC,WAAX,EAAlB;;AACA,MAAI,CAAC,CAAC,GAAGf,aAAa,CAACS,OAAlB,EAA2BE,IAAI,CAACK,KAAhC,CAAD,IAA2C,CAAC,KAAKC,aAAL,CAAmBN,IAAI,CAACK,KAAxB,EAA+B,IAA/B,CAAhD,EAAsF;AACpF,UAAM,IAAIE,SAAJ,CAAc,KAAKC,gCAAL,CAAsC,OAAtC,CAAd,CAAN;AACD;;AAED,MAAIR,IAAI,CAACK,KAAT,EAAgB;AACdJ,IAAAA,UAAU,CAACI,KAAX,GAAmB,KAAKI,YAAL,CAAkBT,IAAI,CAACK,KAAvB,CAAnB;AACD,GAFD,MAEO;AACLJ,IAAAA,UAAU,CAACI,KAAX,GAAmBd,MAAM,CAACmB,KAAP,CAAaC,UAAb,CAAwB,IAAIlB,WAAW,CAACK,OAAhB,CAAwBC,SAAxB,EAAmCa,QAAnC,EAAxB,CAAnB;AACD;;AAED,MAAIZ,IAAI,CAACa,MAAT,EAAiB;AACfZ,IAAAA,UAAU,CAACY,MAAX,GAAoBb,IAAI,CAACa,MAAL,CAAYC,aAAhC;AACD;;AACD,MAAIC,aAAa,GAAG,IAAIpB,sBAAsB,CAACG,OAAvB,CAA+BkB,aAAnC,CAAiDf,UAAjD,CAApB;AAEA,MAAIgB,YAAY,GAAG,EAAnB;AACAA,EAAAA,YAAY,CAACC,IAAb,GAAoBvB,sBAAsB,CAACG,OAAvB,CAA+BqB,aAA/B,CAA6CjC,WAA7C,CAAyD6B,aAAzD,CAApB;AACA,OAAKK,gBAAL,CAAsBH,YAAtB,EAAoCjB,IAApC;AAEA,SAAO,IAAIL,sBAAsB,CAACG,OAAvB,CAA+BuB,SAAnC,CAA6CJ,YAA7C,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changeTrust = changeTrust;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _jsXdr = require('js-xdr');\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MAX_INT64 = '9223372036854775807';\n\n/**\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\n * trust line for a given asset from the source account to another. The issuer being\n * trusted and the asset code are in the given Asset object.\n * @function\n * @alias Operation.changeTrust\n * @param {object} opts Options object\n * @param {Asset} opts.asset - The asset for the trust line.\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\n *                                If the limit is set to \"0\" it deletes the trustline.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @returns {xdr.ChangeTrustOp} Change Trust operation\n */\nfunction changeTrust(opts) {\n  var attributes = {};\n  attributes.line = opts.asset.toXDRObject();\n  if (!(0, _isUndefined2.default)(opts.limit) && !this.isValidAmount(opts.limit, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\n  }\n\n  if (opts.limit) {\n    attributes.limit = this._toXDRAmount(opts.limit);\n  } else {\n    attributes.limit = _jsXdr.Hyper.fromString(new _bignumber2.default(MAX_INT64).toString());\n  }\n\n  if (opts.source) {\n    attributes.source = opts.source.masterKeypair;\n  }\n  var changeTrustOP = new _stellarXdr_generated2.default.ChangeTrustOp(attributes);\n\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.changeTrust(changeTrustOP);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"]},"metadata":{},"sourceType":"script"}