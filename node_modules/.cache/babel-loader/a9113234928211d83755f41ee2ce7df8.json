{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Memo = exports.MemoReturn = exports.MemoHash = exports.MemoText = exports.MemoID = exports.MemoNone = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _clone = require('lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _jsXdr = require('js-xdr');\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nvar _stellarXdr_generated = require('./generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Type of {@link Memo}.\n */\n\n\nvar MemoNone = exports.MemoNone = 'none';\n/**\n * Type of {@link Memo}.\n */\n\nvar MemoID = exports.MemoID = 'id';\n/**\n * Type of {@link Memo}.\n */\n\nvar MemoText = exports.MemoText = 'text';\n/**\n * Type of {@link Memo}.\n */\n\nvar MemoHash = exports.MemoHash = 'hash';\n/**\n * Type of {@link Memo}.\n */\n\nvar MemoReturn = exports.MemoReturn = 'return';\n/**\n * `Memo` represents memos attached to transactions.\n *\n * @param {string} type - `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n * @param {*} value - `string` for `MemoID`, `MemoText`, buffer of hex string for `MemoHash` or `MemoReturn`\n * @see [Transactions concept](https://www.stellar.org/developers/guides/concepts/transactions.html)\n * @class Memo\n */\n\nvar Memo = function () {\n  function Memo(type) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Memo);\n\n    this._type = type;\n    this._value = value;\n\n    switch (this._type) {\n      case MemoNone:\n        break;\n\n      case MemoID:\n        Memo._validateIdValue(value);\n\n        break;\n\n      case MemoText:\n        Memo._validateTextValue(value);\n\n        break;\n\n      case MemoHash:\n      case MemoReturn:\n        Memo._validateHashValue(value); // We want MemoHash and MemoReturn to have Buffer as a value\n\n\n        if ((0, _isString2.default)(value)) {\n          this._value = Buffer.from(value, 'hex');\n        }\n\n        break;\n\n      default:\n        throw new Error('Invalid memo type');\n    }\n  }\n  /**\n   * Contains memo type: `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n   */\n\n\n  _createClass(Memo, [{\n    key: 'toXDRObject',\n\n    /**\n     * Returns XDR memo object.\n     * @returns {xdr.Memo}\n     */\n    value: function toXDRObject() {\n      switch (this._type) {\n        case MemoNone:\n          return _stellarXdr_generated2.default.Memo.memoNone();\n\n        case MemoID:\n          return _stellarXdr_generated2.default.Memo.memoId(_jsXdr.UnsignedHyper.fromString(this._value));\n\n        case MemoText:\n          return _stellarXdr_generated2.default.Memo.memoText(this._value);\n\n        case MemoHash:\n          return _stellarXdr_generated2.default.Memo.memoHash(this._value);\n\n        case MemoReturn:\n          return _stellarXdr_generated2.default.Memo.memoReturn(this._value);\n\n        default:\n          return null;\n      }\n    }\n    /**\n     * Returns {@link Memo} from XDR memo object.\n     * @param {xdr.Memo} object XDR memo object\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'type',\n    get: function get() {\n      return (0, _clone2.default)(this._type);\n    },\n    set: function set(type) {\n      throw new Error('Memo is immutable');\n    }\n    /**\n     * Contains memo value:\n     * * `null` for `MemoNone`,\n     * * `string` for `MemoID`,\n     * * `Buffer` for `MemoText` after decoding using `fromXDRObject`, original value otherwise,\n     * * `Buffer` for `MemoHash`, `MemoReturn`.\n     */\n\n  }, {\n    key: 'value',\n    get: function get() {\n      switch (this._type) {\n        case MemoNone:\n          return null;\n\n        case MemoID:\n        case MemoText:\n          return (0, _clone2.default)(this._value);\n\n        case MemoHash:\n        case MemoReturn:\n          return Buffer.from(this._value);\n\n        default:\n          throw new Error('Invalid memo type');\n      }\n    },\n    set: function set(value) {\n      throw new Error('Memo is immutable');\n    }\n  }], [{\n    key: '_validateIdValue',\n    value: function _validateIdValue(value) {\n      var error = new Error('Expects a int64 as a string. Got ' + value);\n\n      if (!(0, _isString2.default)(value)) {\n        throw error;\n      }\n\n      var number = void 0;\n\n      try {\n        number = new _bignumber2.default(value);\n      } catch (e) {\n        throw error;\n      } // Infinity\n\n\n      if (!number.isFinite()) {\n        throw error;\n      } // NaN\n\n\n      if (number.isNaN()) {\n        throw error;\n      }\n    }\n  }, {\n    key: '_validateTextValue',\n    value: function _validateTextValue(value) {\n      if (!_stellarXdr_generated2.default.Memo.armTypeForArm('text').isValid(value)) {\n        throw new Error('Expects string, array or buffer, max 28 bytes');\n      }\n    }\n  }, {\n    key: '_validateHashValue',\n    value: function _validateHashValue(value) {\n      var error = new Error('Expects a 32 byte hash value or hex encoded string. Got ' + value);\n\n      if (value === null || (0, _isUndefined2.default)(value)) {\n        throw error;\n      }\n\n      var valueBuffer = void 0;\n\n      if ((0, _isString2.default)(value)) {\n        if (!/^[0-9A-Fa-f]{64}$/g.test(value)) {\n          throw error;\n        }\n\n        valueBuffer = Buffer.from(value, 'hex');\n      } else if (Buffer.isBuffer(value)) {\n        valueBuffer = Buffer.from(value);\n      } else {\n        throw error;\n      }\n\n      if (!valueBuffer.length || valueBuffer.length !== 32) {\n        throw error;\n      }\n    }\n    /**\n     * Returns an empty memo (`MemoNone`).\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'none',\n    value: function none() {\n      return new Memo(MemoNone);\n    }\n    /**\n     * Creates and returns a `MemoText` memo.\n     * @param {string} text - memo text\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'text',\n    value: function text(_text) {\n      return new Memo(MemoText, _text);\n    }\n    /**\n     * Creates and returns a `MemoID` memo.\n     * @param {string} id - 64-bit number represented as a string\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'id',\n    value: function id(_id) {\n      return new Memo(MemoID, _id);\n    }\n    /**\n     * Creates and returns a `MemoHash` memo.\n     * @param {array|string} hash - 32 byte hash or hex encoded string\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'hash',\n    value: function hash(_hash) {\n      return new Memo(MemoHash, _hash);\n    }\n    /**\n     * Creates and returns a `MemoReturn` memo.\n     * @param {array|string} hash - 32 byte hash or hex encoded string\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'return',\n    value: function _return(hash) {\n      return new Memo(MemoReturn, hash);\n    }\n  }, {\n    key: 'fromXDRObject',\n    value: function fromXDRObject(object) {\n      switch (object.arm()) {\n        case 'id':\n          return Memo.id(object.value().toString());\n\n        case 'text':\n          return Memo.text(object.value());\n\n        case 'hash':\n          return Memo.hash(object.value());\n\n        case 'retHash':\n          return Memo.return(object.value());\n\n        default:\n          break;\n      }\n\n      if (typeof object.value() === 'undefined') {\n        return Memo.none();\n      }\n\n      throw new Error('Unknown type');\n    }\n  }]);\n\n  return Memo;\n}();\n\nexports.Memo = Memo;","map":{"version":3,"sources":["/home/manuel/Escritorio/blockchain_code/blockchain-crowdfunding/node_modules/stellar-base/lib/memo.js"],"names":["Object","defineProperty","exports","value","Memo","MemoReturn","MemoHash","MemoText","MemoID","MemoNone","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_isUndefined","require","_isUndefined2","_interopRequireDefault","_isString","_isString2","_clone","_clone2","_jsXdr","_bignumber","_bignumber2","_stellarXdr_generated","_stellarXdr_generated2","obj","__esModule","default","_classCallCheck","instance","TypeError","type","arguments","_type","_value","_validateIdValue","_validateTextValue","_validateHashValue","Buffer","from","Error","toXDRObject","memoNone","memoId","UnsignedHyper","fromString","memoText","memoHash","memoReturn","get","set","error","number","e","isFinite","isNaN","armTypeForArm","isValid","valueBuffer","test","isBuffer","none","text","_text","id","_id","hash","_hash","_return","fromXDRObject","object","arm","toString","return"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Memo = exports.MemoReturn = exports.MemoHash = exports.MemoText = exports.MemoID = exports.MemoNone = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _clone = require('lodash/clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _jsXdr = require('js-xdr');\n\nvar _bignumber = require('bignumber.js');\n\nvar _bignumber2 = _interopRequireDefault(_bignumber);\n\nvar _stellarXdr_generated = require('./generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Type of {@link Memo}.\n */\nvar MemoNone = exports.MemoNone = 'none';\n/**\n * Type of {@link Memo}.\n */\nvar MemoID = exports.MemoID = 'id';\n/**\n * Type of {@link Memo}.\n */\nvar MemoText = exports.MemoText = 'text';\n/**\n * Type of {@link Memo}.\n */\nvar MemoHash = exports.MemoHash = 'hash';\n/**\n * Type of {@link Memo}.\n */\nvar MemoReturn = exports.MemoReturn = 'return';\n\n/**\n * `Memo` represents memos attached to transactions.\n *\n * @param {string} type - `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n * @param {*} value - `string` for `MemoID`, `MemoText`, buffer of hex string for `MemoHash` or `MemoReturn`\n * @see [Transactions concept](https://www.stellar.org/developers/guides/concepts/transactions.html)\n * @class Memo\n */\n\nvar Memo = function () {\n  function Memo(type) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Memo);\n\n    this._type = type;\n    this._value = value;\n\n    switch (this._type) {\n      case MemoNone:\n        break;\n      case MemoID:\n        Memo._validateIdValue(value);\n        break;\n      case MemoText:\n        Memo._validateTextValue(value);\n        break;\n      case MemoHash:\n      case MemoReturn:\n        Memo._validateHashValue(value);\n        // We want MemoHash and MemoReturn to have Buffer as a value\n        if ((0, _isString2.default)(value)) {\n          this._value = Buffer.from(value, 'hex');\n        }\n        break;\n      default:\n        throw new Error('Invalid memo type');\n    }\n  }\n\n  /**\n   * Contains memo type: `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\n   */\n\n\n  _createClass(Memo, [{\n    key: 'toXDRObject',\n\n\n    /**\n     * Returns XDR memo object.\n     * @returns {xdr.Memo}\n     */\n    value: function toXDRObject() {\n      switch (this._type) {\n        case MemoNone:\n          return _stellarXdr_generated2.default.Memo.memoNone();\n        case MemoID:\n          return _stellarXdr_generated2.default.Memo.memoId(_jsXdr.UnsignedHyper.fromString(this._value));\n        case MemoText:\n          return _stellarXdr_generated2.default.Memo.memoText(this._value);\n        case MemoHash:\n          return _stellarXdr_generated2.default.Memo.memoHash(this._value);\n        case MemoReturn:\n          return _stellarXdr_generated2.default.Memo.memoReturn(this._value);\n        default:\n          return null;\n      }\n    }\n\n    /**\n     * Returns {@link Memo} from XDR memo object.\n     * @param {xdr.Memo} object XDR memo object\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'type',\n    get: function get() {\n      return (0, _clone2.default)(this._type);\n    },\n    set: function set(type) {\n      throw new Error('Memo is immutable');\n    }\n\n    /**\n     * Contains memo value:\n     * * `null` for `MemoNone`,\n     * * `string` for `MemoID`,\n     * * `Buffer` for `MemoText` after decoding using `fromXDRObject`, original value otherwise,\n     * * `Buffer` for `MemoHash`, `MemoReturn`.\n     */\n\n  }, {\n    key: 'value',\n    get: function get() {\n      switch (this._type) {\n        case MemoNone:\n          return null;\n        case MemoID:\n        case MemoText:\n          return (0, _clone2.default)(this._value);\n        case MemoHash:\n        case MemoReturn:\n          return Buffer.from(this._value);\n        default:\n          throw new Error('Invalid memo type');\n      }\n    },\n    set: function set(value) {\n      throw new Error('Memo is immutable');\n    }\n  }], [{\n    key: '_validateIdValue',\n    value: function _validateIdValue(value) {\n      var error = new Error('Expects a int64 as a string. Got ' + value);\n\n      if (!(0, _isString2.default)(value)) {\n        throw error;\n      }\n\n      var number = void 0;\n      try {\n        number = new _bignumber2.default(value);\n      } catch (e) {\n        throw error;\n      }\n\n      // Infinity\n      if (!number.isFinite()) {\n        throw error;\n      }\n\n      // NaN\n      if (number.isNaN()) {\n        throw error;\n      }\n    }\n  }, {\n    key: '_validateTextValue',\n    value: function _validateTextValue(value) {\n      if (!_stellarXdr_generated2.default.Memo.armTypeForArm('text').isValid(value)) {\n        throw new Error('Expects string, array or buffer, max 28 bytes');\n      }\n    }\n  }, {\n    key: '_validateHashValue',\n    value: function _validateHashValue(value) {\n      var error = new Error('Expects a 32 byte hash value or hex encoded string. Got ' + value);\n\n      if (value === null || (0, _isUndefined2.default)(value)) {\n        throw error;\n      }\n\n      var valueBuffer = void 0;\n      if ((0, _isString2.default)(value)) {\n        if (!/^[0-9A-Fa-f]{64}$/g.test(value)) {\n          throw error;\n        }\n        valueBuffer = Buffer.from(value, 'hex');\n      } else if (Buffer.isBuffer(value)) {\n        valueBuffer = Buffer.from(value);\n      } else {\n        throw error;\n      }\n\n      if (!valueBuffer.length || valueBuffer.length !== 32) {\n        throw error;\n      }\n    }\n\n    /**\n     * Returns an empty memo (`MemoNone`).\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'none',\n    value: function none() {\n      return new Memo(MemoNone);\n    }\n\n    /**\n     * Creates and returns a `MemoText` memo.\n     * @param {string} text - memo text\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'text',\n    value: function text(_text) {\n      return new Memo(MemoText, _text);\n    }\n\n    /**\n     * Creates and returns a `MemoID` memo.\n     * @param {string} id - 64-bit number represented as a string\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'id',\n    value: function id(_id) {\n      return new Memo(MemoID, _id);\n    }\n\n    /**\n     * Creates and returns a `MemoHash` memo.\n     * @param {array|string} hash - 32 byte hash or hex encoded string\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'hash',\n    value: function hash(_hash) {\n      return new Memo(MemoHash, _hash);\n    }\n\n    /**\n     * Creates and returns a `MemoReturn` memo.\n     * @param {array|string} hash - 32 byte hash or hex encoded string\n     * @returns {Memo}\n     */\n\n  }, {\n    key: 'return',\n    value: function _return(hash) {\n      return new Memo(MemoReturn, hash);\n    }\n  }, {\n    key: 'fromXDRObject',\n    value: function fromXDRObject(object) {\n      switch (object.arm()) {\n        case 'id':\n          return Memo.id(object.value().toString());\n        case 'text':\n          return Memo.text(object.value());\n        case 'hash':\n          return Memo.hash(object.value());\n        case 'retHash':\n          return Memo.return(object.value());\n        default:\n          break;\n      }\n\n      if (typeof object.value() === 'undefined') {\n        return Memo.none();\n      }\n\n      throw new Error('Unknown type');\n    }\n  }]);\n\n  return Memo;\n}();\n\nexports.Memo = Memo;"]},"metadata":{},"sourceType":"script"}