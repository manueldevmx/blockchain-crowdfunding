{"version":3,"sources":["../../src/stack.tsx"],"names":["StackDivider","props","__css","borderWidth","alignSelf","borderColor","width","height","StackItem","display","flex","minWidth","selector","Stack","ref","isInline","directionProp","direction","align","justify","spacing","wrap","children","divider","className","shouldWrapChildren","rest","styles","React","useMemo","directionStyles","column","mt","ml","row","mb","mr","flexDirection","value","marginX","includes","marginY","borderLeftWidth","borderBottomWidth","dividerStyles","hasDivider","shouldUseChildren","validChildren","clones","map","child","index","isLast","length","wrappedChild","_child","clonedDivider","cloneElement","_divider","_className","__DEV__","displayName","HStack","VStack"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  ChakraComponent,\n  forwardRef,\n  HTMLChakraProps,\n  PropsOf,\n  ResponsiveValue,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cx, getValidChildren, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport type StackDirection = ResponsiveValue<\n  \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\"\n>\n\ninterface StackOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n  /**\n   * The space between each stack item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The direction to stack the items.\n   */\n  direction?: StackDirection\n  /**\n   * If `true`, each stack item will show a divider\n   * @type React.ReactElement\n   */\n  divider?: React.ReactElement\n  /**\n   * If `true`, the children will be wrapped in a `Box` with\n   * `display: inline-block`, and the `Box` will take the spacing props\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true` the items will be stacked horizontally.\n   */\n  isInline?: boolean\n}\n\nexport interface StackDividerProps extends HTMLChakraProps<\"div\"> {}\n\nexport const StackDivider: ChakraComponent<\"div\"> = (props) => {\n  return (\n    <chakra.div\n      className=\"chakra-stack__divider\"\n      {...props}\n      __css={{\n        ...props.__css,\n        borderWidth: 0,\n        alignSelf: \"stretch\",\n        borderColor: \"inherit\",\n        width: \"auto\",\n        height: \"auto\",\n      }}\n    />\n  )\n}\n\nexport const StackItem: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__item\"\n    {...props}\n    __css={{\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"],\n    }}\n  />\n)\n\nexport interface StackProps extends PropsOf<typeof chakra.div>, StackOptions {}\n\n/**\n * If we ever run into SSR issues with this, check this post to find a fix for it:\n * @see https://medium.com/@emmenko/patching-lobotomized-owl-selector-for-emotion-ssr-5a582a3c424c\n */\nconst selector = \"& > *:not(style) ~ *:not(style)\"\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/components/stack\n *\n */\nexport const Stack = forwardRef<StackProps, \"div\">(function Stack(props, ref) {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const direction = isInline ? \"row\" : directionProp ?? \"column\"\n\n  const styles = React.useMemo(() => {\n    const directionStyles = {\n      column: { mt: spacing, ml: 0 },\n      row: { ml: spacing, mt: 0 },\n      \"column-reverse\": { mb: spacing, mr: 0 },\n      \"row-reverse\": { mr: spacing, mb: 0 },\n    }\n\n    return {\n      flexDirection: direction,\n      [selector]: mapResponsive(direction, (value) => directionStyles[value]),\n    }\n  }, [direction, spacing])\n\n  /**\n   * Divider Styles\n   */\n  const marginX = mapResponsive(direction, (value) =>\n    value.includes(\"row\") ? spacing : 0,\n  )\n\n  const marginY = mapResponsive(direction, (value) =>\n    value.includes(\"row\") ? 0 : spacing,\n  )\n\n  const borderLeftWidth = mapResponsive(direction, (value) =>\n    value.includes(\"row\") ? \"1px\" : 0,\n  )\n\n  const borderBottomWidth = mapResponsive(direction, (value) =>\n    value.includes(\"row\") ? 0 : \"1px\",\n  )\n\n  const dividerStyles = {\n    marginX,\n    marginY,\n    borderLeftWidth,\n    borderBottomWidth,\n  }\n\n  const hasDivider = !!divider\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider\n\n  const validChildren = getValidChildren(children)\n\n  const clones = shouldUseChildren\n    ? validChildren\n    : validChildren.map((child, index) => {\n        const isLast = index + 1 === validChildren.length\n        const wrappedChild = <StackItem key={index}>{child}</StackItem>\n        const _child = shouldWrapChildren ? wrappedChild : child\n\n        if (!hasDivider) return _child\n\n        const clonedDivider = React.cloneElement(divider as any, dividerStyles)\n        const _divider = isLast ? null : clonedDivider\n\n        return <React.Fragment key={index}>{[_child, _divider]}</React.Fragment>\n      })\n\n  const _className = cx(\"chakra-stack\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"flex\"\n      alignItems={align}\n      justifyContent={justify}\n      flexDirection={styles.flexDirection}\n      flexWrap={wrap}\n      className={_className}\n      __css={hasDivider ? {} : { [selector]: styles[selector] }}\n      {...rest}\n    >\n      {clones}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  Stack.displayName = \"Stack\"\n}\n\n/**\n * A view that arranges its children in a horizontal line.\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => {\n  return <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n})\n\nif (__DEV__) {\n  HStack.displayName = \"HStack\"\n}\n\n/**\n * A view that arranges its children in a vertical line.\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => {\n  return <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n})\n\nif (__DEV__) {\n  VStack.displayName = \"VStack\"\n}\n"],"file":"stack.js"}